// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: ai/rag/v0/stores.proto

// buf:lint:ignore PACKAGE_VERSION_SUFFIX

package ragpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The indexing state of a IndexFile.
// buf:lint:ignore ENUM_VALUE_PREFIX
type IndexFile_State int32

const (
	IndexFile_STATE_UNSPECIFIED IndexFile_State = 0
	IndexFile_INDEXING          IndexFile_State = 1
	IndexFile_INDEXED           IndexFile_State = 2
	IndexFile_FAILED            IndexFile_State = 3
)

// Enum value maps for IndexFile_State.
var (
	IndexFile_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "INDEXING",
		2: "INDEXED",
		3: "FAILED",
	}
	IndexFile_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"INDEXING":          1,
		"INDEXED":           2,
		"FAILED":            3,
	}
)

func (x IndexFile_State) Enum() *IndexFile_State {
	p := new(IndexFile_State)
	*p = x
	return p
}

func (x IndexFile_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndexFile_State) Descriptor() protoreflect.EnumDescriptor {
	return file_ai_rag_v0_stores_proto_enumTypes[0].Descriptor()
}

func (IndexFile_State) Type() protoreflect.EnumType {
	return &file_ai_rag_v0_stores_proto_enumTypes[0]
}

func (x IndexFile_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndexFile_State.Descriptor instead.
func (IndexFile_State) EnumDescriptor() ([]byte, []int) {
	return file_ai_rag_v0_stores_proto_rawDescGZIP(), []int{0, 0}
}

// A file in an index store.
type IndexFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the store the file belongs to.
	StoreId string `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// The name of the file.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The time the file was last uploaded.
	UploadTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=upload_time,json=uploadTime,proto3" json:"upload_time,omitempty"`
	// Information about the file.
	//
	// Types that are assignable to Info:
	//
	//	*IndexFile_DirectoryInfo_
	//	*IndexFile_FileInfo_
	Info isIndexFile_Info `protobuf_oneof:"info"`
}

func (x *IndexFile) Reset() {
	*x = IndexFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_rag_v0_stores_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexFile) ProtoMessage() {}

func (x *IndexFile) ProtoReflect() protoreflect.Message {
	mi := &file_ai_rag_v0_stores_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexFile.ProtoReflect.Descriptor instead.
func (*IndexFile) Descriptor() ([]byte, []int) {
	return file_ai_rag_v0_stores_proto_rawDescGZIP(), []int{0}
}

func (x *IndexFile) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *IndexFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IndexFile) GetUploadTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UploadTime
	}
	return nil
}

func (m *IndexFile) GetInfo() isIndexFile_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (x *IndexFile) GetDirectoryInfo() *IndexFile_DirectoryInfo {
	if x, ok := x.GetInfo().(*IndexFile_DirectoryInfo_); ok {
		return x.DirectoryInfo
	}
	return nil
}

func (x *IndexFile) GetFileInfo() *IndexFile_FileInfo {
	if x, ok := x.GetInfo().(*IndexFile_FileInfo_); ok {
		return x.FileInfo
	}
	return nil
}

type isIndexFile_Info interface {
	isIndexFile_Info()
}

type IndexFile_DirectoryInfo_ struct {
	// Information about a directory.
	// Directory information is only populated when the `recursive` flag on the request is set to `false`.
	DirectoryInfo *IndexFile_DirectoryInfo `protobuf:"bytes,4,opt,name=directory_info,json=directoryInfo,proto3,oneof"`
}

type IndexFile_FileInfo_ struct {
	// Information about a file.
	FileInfo *IndexFile_FileInfo `protobuf:"bytes,5,opt,name=file_info,json=fileInfo,proto3,oneof"`
}

func (*IndexFile_DirectoryInfo_) isIndexFile_Info() {}

func (*IndexFile_FileInfo_) isIndexFile_Info() {}

// Request to the `ListIndexFiles` method.
type ListIndexFilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED. The ID of the store to list files from.
	StoreId string `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// OPTIONAL. List files in the specified directory prefix. When not specified, the root directory will be used.
	Directory string `protobuf:"bytes,2,opt,name=directory,proto3" json:"directory,omitempty"`
	// OPTIONAL. List files recursively.
	// When set to true, directory entries will not be included in the response.
	Recursive bool `protobuf:"varint,3,opt,name=recursive,proto3" json:"recursive,omitempty"`
	// OPTIONAL. The maximum number of results to return.
	// When not specified a default of 100 will be used. When a value greater than 1000 is specified, the value will be
	// coerced down to 1000.
	PageSize int32 `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// OPTIONAL. The page token to use for the next page of results.
	// When not specified, the first page of results will be returned.
	// All filter parameters must remain the same when using a page token.
	PageToken string `protobuf:"bytes,6,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListIndexFilesRequest) Reset() {
	*x = ListIndexFilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_rag_v0_stores_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIndexFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIndexFilesRequest) ProtoMessage() {}

func (x *ListIndexFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_rag_v0_stores_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIndexFilesRequest.ProtoReflect.Descriptor instead.
func (*ListIndexFilesRequest) Descriptor() ([]byte, []int) {
	return file_ai_rag_v0_stores_proto_rawDescGZIP(), []int{1}
}

func (x *ListIndexFilesRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *ListIndexFilesRequest) GetDirectory() string {
	if x != nil {
		return x.Directory
	}
	return ""
}

func (x *ListIndexFilesRequest) GetRecursive() bool {
	if x != nil {
		return x.Recursive
	}
	return false
}

func (x *ListIndexFilesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListIndexFilesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Response to the `ListIndexFiles` method.
type ListIndexFilesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of files
	Files []*IndexFile `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	// The token used to retrieve the next page of files.
	// If there are no more pages, this field will be empty.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListIndexFilesResponse) Reset() {
	*x = ListIndexFilesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_rag_v0_stores_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIndexFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIndexFilesResponse) ProtoMessage() {}

func (x *ListIndexFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_rag_v0_stores_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIndexFilesResponse.ProtoReflect.Descriptor instead.
func (*ListIndexFilesResponse) Descriptor() ([]byte, []int) {
	return file_ai_rag_v0_stores_proto_rawDescGZIP(), []int{2}
}

func (x *ListIndexFilesResponse) GetFiles() []*IndexFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *ListIndexFilesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Information about a directory.
type IndexFile_DirectoryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The count of states of all files within the directory and its subdirectories.
	States map[string]uint32 `protobuf:"bytes,1,rep,name=states,proto3" json:"states,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *IndexFile_DirectoryInfo) Reset() {
	*x = IndexFile_DirectoryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_rag_v0_stores_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexFile_DirectoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexFile_DirectoryInfo) ProtoMessage() {}

func (x *IndexFile_DirectoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ai_rag_v0_stores_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexFile_DirectoryInfo.ProtoReflect.Descriptor instead.
func (*IndexFile_DirectoryInfo) Descriptor() ([]byte, []int) {
	return file_ai_rag_v0_stores_proto_rawDescGZIP(), []int{0, 0}
}

func (x *IndexFile_DirectoryInfo) GetStates() map[string]uint32 {
	if x != nil {
		return x.States
	}
	return nil
}

// Information about a file.
type IndexFile_FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The MD5 hash of the file.
	Md5 string `protobuf:"bytes,1,opt,name=md5,proto3" json:"md5,omitempty"`
	// The indexing state of the file.
	State IndexFile_State `protobuf:"varint,2,opt,name=state,proto3,enum=ai.rag.v0.IndexFile_State" json:"state,omitempty"`
	// The reason for the state. This field is only populated when the state is FAILED.
	StateReason string `protobuf:"bytes,3,opt,name=state_reason,json=stateReason,proto3" json:"state_reason,omitempty"`
}

func (x *IndexFile_FileInfo) Reset() {
	*x = IndexFile_FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_rag_v0_stores_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexFile_FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexFile_FileInfo) ProtoMessage() {}

func (x *IndexFile_FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ai_rag_v0_stores_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexFile_FileInfo.ProtoReflect.Descriptor instead.
func (*IndexFile_FileInfo) Descriptor() ([]byte, []int) {
	return file_ai_rag_v0_stores_proto_rawDescGZIP(), []int{0, 1}
}

func (x *IndexFile_FileInfo) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *IndexFile_FileInfo) GetState() IndexFile_State {
	if x != nil {
		return x.State
	}
	return IndexFile_STATE_UNSPECIFIED
}

func (x *IndexFile_FileInfo) GetStateReason() string {
	if x != nil {
		return x.StateReason
	}
	return ""
}

var File_ai_rag_v0_stores_proto protoreflect.FileDescriptor

var file_ai_rag_v0_stores_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x69, 0x2f, 0x72, 0x61, 0x67, 0x2f, 0x76, 0x30, 0x2f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x61, 0x69, 0x2e, 0x72, 0x61, 0x67,
	0x2e, 0x76, 0x30, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd9, 0x04, 0x0a, 0x09, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4b,
	0x0a, 0x0e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x69, 0x2e, 0x72, 0x61, 0x67, 0x2e,
	0x76, 0x30, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x61, 0x69, 0x2e, 0x72, 0x61, 0x67, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x46, 0x69, 0x6c, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x92, 0x01, 0x0a, 0x0d, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x69,
	0x2e, 0x72, 0x61, 0x67, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x46, 0x69, 0x6c,
	0x65, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x71,
	0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64,
	0x35, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x30, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x61, 0x69,
	0x2e, 0x72, 0x61, 0x67, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x46, 0x69, 0x6c,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x22, 0x45, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x22, 0xaa, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6c, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x69, 0x2e, 0x72, 0x61, 0x67, 0x2e,
	0x76, 0x30, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65,
	0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0x61, 0x0a, 0x06, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x72, 0x61, 0x67,
	0x2e, 0x76, 0x30, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x69, 0x2e, 0x72,
	0x61, 0x67, 0x2e, 0x76, 0x30, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x39,
	0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x61,
	0x6b, 0x36, 0x2d, 0x73, 0x69, 0x74, 0x65, 0x73, 0x2f, 0x72, 0x32, 0x67, 0x32, 0x2d, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x69, 0x2f, 0x72, 0x61, 0x67,
	0x2f, 0x76, 0x30, 0x3b, 0x72, 0x61, 0x67, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_ai_rag_v0_stores_proto_rawDescOnce sync.Once
	file_ai_rag_v0_stores_proto_rawDescData = file_ai_rag_v0_stores_proto_rawDesc
)

func file_ai_rag_v0_stores_proto_rawDescGZIP() []byte {
	file_ai_rag_v0_stores_proto_rawDescOnce.Do(func() {
		file_ai_rag_v0_stores_proto_rawDescData = protoimpl.X.CompressGZIP(file_ai_rag_v0_stores_proto_rawDescData)
	})
	return file_ai_rag_v0_stores_proto_rawDescData
}

var file_ai_rag_v0_stores_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ai_rag_v0_stores_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_ai_rag_v0_stores_proto_goTypes = []interface{}{
	(IndexFile_State)(0),            // 0: ai.rag.v0.IndexFile.State
	(*IndexFile)(nil),               // 1: ai.rag.v0.IndexFile
	(*ListIndexFilesRequest)(nil),   // 2: ai.rag.v0.ListIndexFilesRequest
	(*ListIndexFilesResponse)(nil),  // 3: ai.rag.v0.ListIndexFilesResponse
	(*IndexFile_DirectoryInfo)(nil), // 4: ai.rag.v0.IndexFile.DirectoryInfo
	(*IndexFile_FileInfo)(nil),      // 5: ai.rag.v0.IndexFile.FileInfo
	nil,                             // 6: ai.rag.v0.IndexFile.DirectoryInfo.StatesEntry
	(*timestamppb.Timestamp)(nil),   // 7: google.protobuf.Timestamp
}
var file_ai_rag_v0_stores_proto_depIdxs = []int32{
	7, // 0: ai.rag.v0.IndexFile.upload_time:type_name -> google.protobuf.Timestamp
	4, // 1: ai.rag.v0.IndexFile.directory_info:type_name -> ai.rag.v0.IndexFile.DirectoryInfo
	5, // 2: ai.rag.v0.IndexFile.file_info:type_name -> ai.rag.v0.IndexFile.FileInfo
	1, // 3: ai.rag.v0.ListIndexFilesResponse.files:type_name -> ai.rag.v0.IndexFile
	6, // 4: ai.rag.v0.IndexFile.DirectoryInfo.states:type_name -> ai.rag.v0.IndexFile.DirectoryInfo.StatesEntry
	0, // 5: ai.rag.v0.IndexFile.FileInfo.state:type_name -> ai.rag.v0.IndexFile.State
	2, // 6: ai.rag.v0.Stores.ListIndexFiles:input_type -> ai.rag.v0.ListIndexFilesRequest
	3, // 7: ai.rag.v0.Stores.ListIndexFiles:output_type -> ai.rag.v0.ListIndexFilesResponse
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_ai_rag_v0_stores_proto_init() }
func file_ai_rag_v0_stores_proto_init() {
	if File_ai_rag_v0_stores_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ai_rag_v0_stores_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_rag_v0_stores_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIndexFilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_rag_v0_stores_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIndexFilesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_rag_v0_stores_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexFile_DirectoryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_rag_v0_stores_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexFile_FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ai_rag_v0_stores_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*IndexFile_DirectoryInfo_)(nil),
		(*IndexFile_FileInfo_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ai_rag_v0_stores_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ai_rag_v0_stores_proto_goTypes,
		DependencyIndexes: file_ai_rag_v0_stores_proto_depIdxs,
		EnumInfos:         file_ai_rag_v0_stores_proto_enumTypes,
		MessageInfos:      file_ai_rag_v0_stores_proto_msgTypes,
	}.Build()
	File_ai_rag_v0_stores_proto = out.File
	file_ai_rag_v0_stores_proto_rawDesc = nil
	file_ai_rag_v0_stores_proto_goTypes = nil
	file_ai_rag_v0_stores_proto_depIdxs = nil
}
