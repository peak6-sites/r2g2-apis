// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: ai/stores.proto

// buf:lint:ignore PACKAGE_VERSION_SUFFIX

package ai

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_type "github.com/peak6-sites/r2g2-apis/gen/go/ai/type"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// buf:lint:ignore ENUM_VALUE_PREFIX
type EmbeddingConfig_Model int32

const (
	EmbeddingConfig_MODEL_UNSPECIFIED             EmbeddingConfig_Model = 0
	EmbeddingConfig_OPENAI_TEXT_EMBEDDING_ADA_002 EmbeddingConfig_Model = 1
	EmbeddingConfig_OPENAI_TEXT_EMBEDDING_3_SMALL EmbeddingConfig_Model = 2
	EmbeddingConfig_OPENAI_TEXT_EMBEDDING_3_LARGE EmbeddingConfig_Model = 3
)

// Enum value maps for EmbeddingConfig_Model.
var (
	EmbeddingConfig_Model_name = map[int32]string{
		0: "MODEL_UNSPECIFIED",
		1: "OPENAI_TEXT_EMBEDDING_ADA_002",
		2: "OPENAI_TEXT_EMBEDDING_3_SMALL",
		3: "OPENAI_TEXT_EMBEDDING_3_LARGE",
	}
	EmbeddingConfig_Model_value = map[string]int32{
		"MODEL_UNSPECIFIED":             0,
		"OPENAI_TEXT_EMBEDDING_ADA_002": 1,
		"OPENAI_TEXT_EMBEDDING_3_SMALL": 2,
		"OPENAI_TEXT_EMBEDDING_3_LARGE": 3,
	}
)

func (x EmbeddingConfig_Model) Enum() *EmbeddingConfig_Model {
	p := new(EmbeddingConfig_Model)
	*p = x
	return p
}

func (x EmbeddingConfig_Model) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmbeddingConfig_Model) Descriptor() protoreflect.EnumDescriptor {
	return file_ai_stores_proto_enumTypes[0].Descriptor()
}

func (EmbeddingConfig_Model) Type() protoreflect.EnumType {
	return &file_ai_stores_proto_enumTypes[0]
}

func (x EmbeddingConfig_Model) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EmbeddingConfig_Model.Descriptor instead.
func (EmbeddingConfig_Model) EnumDescriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{1, 0}
}

// State of the file
// buf:lint:ignore ENUM_VALUE_PREFIX
type File_State int32

const (
	File_STATE_UNSPECIFIED File_State = 0
	// The file is currently being indexing
	File_INDEXING File_State = 1
	// The file is currently being deleted
	File_DELETING File_State = 4
	// The file has been successfully indexed
	File_INDEXED File_State = 2
	// The file has failed to index
	// Reference the state_reason field for more information
	File_FAILED File_State = 3
)

// Enum value maps for File_State.
var (
	File_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "INDEXING",
		4: "DELETING",
		2: "INDEXED",
		3: "FAILED",
	}
	File_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"INDEXING":          1,
		"DELETING":          4,
		"INDEXED":           2,
		"FAILED":            3,
	}
)

func (x File_State) Enum() *File_State {
	p := new(File_State)
	*p = x
	return p
}

func (x File_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (File_State) Descriptor() protoreflect.EnumDescriptor {
	return file_ai_stores_proto_enumTypes[1].Descriptor()
}

func (File_State) Type() protoreflect.EnumType {
	return &file_ai_stores_proto_enumTypes[1]
}

func (x File_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use File_State.Descriptor instead.
func (File_State) EnumDescriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{11, 0}
}

// Type of the event
// buf:lint:ignore ENUM_VALUE_PREFIX
type FileIndexEvent_EventType int32

const (
	FileIndexEvent_EVENT_TYPE_UNSPECIFIED FileIndexEvent_EventType = 0
	FileIndexEvent_INDEXING_STARTED       FileIndexEvent_EventType = 3
	FileIndexEvent_INDEXED                FileIndexEvent_EventType = 1
	FileIndexEvent_DELETED                FileIndexEvent_EventType = 2
	FileIndexEvent_FAILED                 FileIndexEvent_EventType = 4
)

// Enum value maps for FileIndexEvent_EventType.
var (
	FileIndexEvent_EventType_name = map[int32]string{
		0: "EVENT_TYPE_UNSPECIFIED",
		3: "INDEXING_STARTED",
		1: "INDEXED",
		2: "DELETED",
		4: "FAILED",
	}
	FileIndexEvent_EventType_value = map[string]int32{
		"EVENT_TYPE_UNSPECIFIED": 0,
		"INDEXING_STARTED":       3,
		"INDEXED":                1,
		"DELETED":                2,
		"FAILED":                 4,
	}
)

func (x FileIndexEvent_EventType) Enum() *FileIndexEvent_EventType {
	p := new(FileIndexEvent_EventType)
	*p = x
	return p
}

func (x FileIndexEvent_EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileIndexEvent_EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_ai_stores_proto_enumTypes[2].Descriptor()
}

func (FileIndexEvent_EventType) Type() protoreflect.EnumType {
	return &file_ai_stores_proto_enumTypes[2]
}

func (x FileIndexEvent_EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileIndexEvent_EventType.Descriptor instead.
func (FileIndexEvent_EventType) EnumDescriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{21, 0}
}

// buf:lint:ignore ENUM_VALUE_PREFIX
type IndexJobEvent_JobAction int32

const (
	IndexJobEvent_JOB_ACTION_UNSPECIFIED IndexJobEvent_JobAction = 0
	IndexJobEvent_INSERT                 IndexJobEvent_JobAction = 1
	IndexJobEvent_DELETE                 IndexJobEvent_JobAction = 2
)

// Enum value maps for IndexJobEvent_JobAction.
var (
	IndexJobEvent_JobAction_name = map[int32]string{
		0: "JOB_ACTION_UNSPECIFIED",
		1: "INSERT",
		2: "DELETE",
	}
	IndexJobEvent_JobAction_value = map[string]int32{
		"JOB_ACTION_UNSPECIFIED": 0,
		"INSERT":                 1,
		"DELETE":                 2,
	}
)

func (x IndexJobEvent_JobAction) Enum() *IndexJobEvent_JobAction {
	p := new(IndexJobEvent_JobAction)
	*p = x
	return p
}

func (x IndexJobEvent_JobAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndexJobEvent_JobAction) Descriptor() protoreflect.EnumDescriptor {
	return file_ai_stores_proto_enumTypes[3].Descriptor()
}

func (IndexJobEvent_JobAction) Type() protoreflect.EnumType {
	return &file_ai_stores_proto_enumTypes[3]
}

func (x IndexJobEvent_JobAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndexJobEvent_JobAction.Descriptor instead.
func (IndexJobEvent_JobAction) EnumDescriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{22, 0}
}

// buf:lint:ignore ENUM_VALUE_PREFIX
type IndexJobEvent_JobState int32

const (
	IndexJobEvent_JOB_STATE_UNSPECIFIED IndexJobEvent_JobState = 0
	IndexJobEvent_PENDING               IndexJobEvent_JobState = 1
	IndexJobEvent_RUNNING               IndexJobEvent_JobState = 2
	IndexJobEvent_COMPLETED             IndexJobEvent_JobState = 3
)

// Enum value maps for IndexJobEvent_JobState.
var (
	IndexJobEvent_JobState_name = map[int32]string{
		0: "JOB_STATE_UNSPECIFIED",
		1: "PENDING",
		2: "RUNNING",
		3: "COMPLETED",
	}
	IndexJobEvent_JobState_value = map[string]int32{
		"JOB_STATE_UNSPECIFIED": 0,
		"PENDING":               1,
		"RUNNING":               2,
		"COMPLETED":             3,
	}
)

func (x IndexJobEvent_JobState) Enum() *IndexJobEvent_JobState {
	p := new(IndexJobEvent_JobState)
	*p = x
	return p
}

func (x IndexJobEvent_JobState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndexJobEvent_JobState) Descriptor() protoreflect.EnumDescriptor {
	return file_ai_stores_proto_enumTypes[4].Descriptor()
}

func (IndexJobEvent_JobState) Type() protoreflect.EnumType {
	return &file_ai_stores_proto_enumTypes[4]
}

func (x IndexJobEvent_JobState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndexJobEvent_JobState.Descriptor instead.
func (IndexJobEvent_JobState) EnumDescriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{22, 1}
}

// A store where files can be uploaded for indexing
type Store struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the store
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// display name of the store
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Indicates the entity that manages the contents of the store.
	ManagedBy string `protobuf:"bytes,8,opt,name=managed_by,json=managedBy,proto3" json:"managed_by,omitempty"`
	// Legacy owner field.
	// This will contain the first element of the `owners` field.
	// Deprecated: See `owners` field.
	//
	// Deprecated: Marked as deprecated in ai/stores.proto.
	Owner string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	// Users that own the store.
	// Values must be in the form `user:username@example.com`
	Owners []string `protobuf:"bytes,6,rep,name=owners,proto3" json:"owners,omitempty"`
	// Users that can upload files to the store.
	// Values will be either:
	// - `domain:example.com` to allow all users in the domain to upload files
	// - `user:username@example.com` to allow a specific user to upload files
	Uploaders []string `protobuf:"bytes,7,rep,name=uploaders,proto3" json:"uploaders,omitempty"`
	// Users who can view the store
	// Values will be either:
	// - `domain:example.com` to allow all users in the domain to view the store
	// - `user:user@example.com` to allow a specific user to view the store
	Viewers []string `protobuf:"bytes,5,rep,name=viewers,proto3" json:"viewers,omitempty"`
	// Timestamp when the store was created
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *Store) Reset() {
	*x = Store{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Store) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Store) ProtoMessage() {}

func (x *Store) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Store.ProtoReflect.Descriptor instead.
func (*Store) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{0}
}

func (x *Store) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Store) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Store) GetManagedBy() string {
	if x != nil {
		return x.ManagedBy
	}
	return ""
}

// Deprecated: Marked as deprecated in ai/stores.proto.
func (x *Store) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Store) GetOwners() []string {
	if x != nil {
		return x.Owners
	}
	return nil
}

func (x *Store) GetUploaders() []string {
	if x != nil {
		return x.Uploaders
	}
	return nil
}

func (x *Store) GetViewers() []string {
	if x != nil {
		return x.Viewers
	}
	return nil
}

func (x *Store) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

// Configuration for embedding documents in a store
type EmbeddingConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The model used to generate embeddings for documents in the store.
	Model EmbeddingConfig_Model `protobuf:"varint,1,opt,name=model,proto3,enum=ai.EmbeddingConfig_Model" json:"model,omitempty"`
	// The number of dimensions in the embedding space.
	// The constraints of this value are determined by the model.
	// For example, the OpenAI Text Embedding Ada 002 model is always 1536 dimensions.
	Dimensions uint32 `protobuf:"varint,2,opt,name=dimensions,proto3" json:"dimensions,omitempty"`
}

func (x *EmbeddingConfig) Reset() {
	*x = EmbeddingConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingConfig) ProtoMessage() {}

func (x *EmbeddingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingConfig.ProtoReflect.Descriptor instead.
func (*EmbeddingConfig) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{1}
}

func (x *EmbeddingConfig) GetModel() EmbeddingConfig_Model {
	if x != nil {
		return x.Model
	}
	return EmbeddingConfig_MODEL_UNSPECIFIED
}

func (x *EmbeddingConfig) GetDimensions() uint32 {
	if x != nil {
		return x.Dimensions
	}
	return 0
}

// Configuration for chunking documents
type ChunkingConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum size of a chunk in tokens.
	ChunkSize uint32 `protobuf:"varint,1,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
	// The number of tokens to overlap between chunks.
	ChunkOverlap uint32 `protobuf:"varint,2,opt,name=chunk_overlap,json=chunkOverlap,proto3" json:"chunk_overlap,omitempty"`
}

func (x *ChunkingConfig) Reset() {
	*x = ChunkingConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChunkingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkingConfig) ProtoMessage() {}

func (x *ChunkingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkingConfig.ProtoReflect.Descriptor instead.
func (*ChunkingConfig) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{2}
}

func (x *ChunkingConfig) GetChunkSize() uint32 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

func (x *ChunkingConfig) GetChunkOverlap() uint32 {
	if x != nil {
		return x.ChunkOverlap
	}
	return 0
}

// A piece of store configuration.
type StoreConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the configuration.  Will be empty for top-level configuration.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Config value
	Config *structpb.Struct `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *StoreConfig) Reset() {
	*x = StoreConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreConfig) ProtoMessage() {}

func (x *StoreConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreConfig.ProtoReflect.Descriptor instead.
func (*StoreConfig) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{3}
}

func (x *StoreConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StoreConfig) GetConfig() *structpb.Struct {
	if x != nil {
		return x.Config
	}
	return nil
}

// Request for the `GetStoreConfig` method.
type GetStoreConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED. ID of the store to retrieve the configuration for.
	StoreId string `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// OPTIONAL. The configuration to retrieve.
	// Leave blank to retrieve the top-level store configuration.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetStoreConfigRequest) Reset() {
	*x = GetStoreConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoreConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoreConfigRequest) ProtoMessage() {}

func (x *GetStoreConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoreConfigRequest.ProtoReflect.Descriptor instead.
func (*GetStoreConfigRequest) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{4}
}

func (x *GetStoreConfigRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *GetStoreConfigRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// A request to create a new store
type CreateStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user-specified id of the store
	// If blank, a id will be generated
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// user-specified display name of the store
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Chunking configuration
	// If not specified, a default configuration will be used.
	ChunkingConfig *ChunkingConfig `protobuf:"bytes,4,opt,name=chunking_config,json=chunkingConfig,proto3" json:"chunking_config,omitempty"`
	// Configuration for generation of vector embeddings. If not specified, a default configuration will be used.
	// Embedding configuration cannot be changed once a store is created.
	EmbeddingConfig *EmbeddingConfig `protobuf:"bytes,5,opt,name=embedding_config,json=embeddingConfig,proto3" json:"embedding_config,omitempty"`
	// Users that own the store.
	// When no owners are specified, the user making the request will be the owner.
	// Values must be in the form `user:user@example.com`
	Owners []string `protobuf:"bytes,6,rep,name=owners,proto3" json:"owners,omitempty"`
	// Users that are allowed to upload files to the store.
	// Values must be either:
	// - `domain:example.com` to allow all users in the domain to upload to the store
	// - `user:user@example.com` to allow a specific user to upload to the store
	Uploaders []string `protobuf:"bytes,7,rep,name=uploaders,proto3" json:"uploaders,omitempty"`
	// Users who can view the store
	// Values must be either:
	// - `domain:example.com` to allow all users in the domain to view the store
	// - `user:user@example.com` to allow a specific user to view the store
	Viewers []string `protobuf:"bytes,3,rep,name=viewers,proto3" json:"viewers,omitempty"`
}

func (x *CreateStoreRequest) Reset() {
	*x = CreateStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStoreRequest) ProtoMessage() {}

func (x *CreateStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStoreRequest.ProtoReflect.Descriptor instead.
func (*CreateStoreRequest) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{5}
}

func (x *CreateStoreRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateStoreRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *CreateStoreRequest) GetChunkingConfig() *ChunkingConfig {
	if x != nil {
		return x.ChunkingConfig
	}
	return nil
}

func (x *CreateStoreRequest) GetEmbeddingConfig() *EmbeddingConfig {
	if x != nil {
		return x.EmbeddingConfig
	}
	return nil
}

func (x *CreateStoreRequest) GetOwners() []string {
	if x != nil {
		return x.Owners
	}
	return nil
}

func (x *CreateStoreRequest) GetUploaders() []string {
	if x != nil {
		return x.Uploaders
	}
	return nil
}

func (x *CreateStoreRequest) GetViewers() []string {
	if x != nil {
		return x.Viewers
	}
	return nil
}

type GetStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the store to retrieve
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetStoreRequest) Reset() {
	*x = GetStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoreRequest) ProtoMessage() {}

func (x *GetStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoreRequest.ProtoReflect.Descriptor instead.
func (*GetStoreRequest) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{6}
}

func (x *GetStoreRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// A request to list available stores
type ListStoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListStoresRequest) Reset() {
	*x = ListStoresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStoresRequest) ProtoMessage() {}

func (x *ListStoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStoresRequest.ProtoReflect.Descriptor instead.
func (*ListStoresRequest) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{7}
}

// A response containing a list of available stores
type ListStoresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list of stores
	Stores []*Store `protobuf:"bytes,1,rep,name=stores,proto3" json:"stores,omitempty"`
}

func (x *ListStoresResponse) Reset() {
	*x = ListStoresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStoresResponse) ProtoMessage() {}

func (x *ListStoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStoresResponse.ProtoReflect.Descriptor instead.
func (*ListStoresResponse) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{8}
}

func (x *ListStoresResponse) GetStores() []*Store {
	if x != nil {
		return x.Stores
	}
	return nil
}

// A request to update the state of a store
type UpdateStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id of the store to update
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The display name of the store
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// A list of owners.
	// Values must be in the form `user:username@exmaple.com`
	Owners *_type.StringList `protobuf:"bytes,4,opt,name=owners,proto3" json:"owners,omitempty"`
	// A list of uploaders.
	// Values must be either:
	// - `domain:example.com` to allow all users in the domain to upload to the store
	// - `user:username@example.com` to allow a specific user to upload to the store
	Uploaders *_type.StringList `protobuf:"bytes,5,opt,name=uploaders,proto3" json:"uploaders,omitempty"`
	// Users who can view the store
	// Values must be either:
	// - `domain:example.com` to allow all users in the domain to view the store
	// - `user:user@example.com` to allow a specific user to view the store
	Viewers *UpdateStoreRequest_ViewersList `protobuf:"bytes,3,opt,name=viewers,proto3" json:"viewers,omitempty"`
}

func (x *UpdateStoreRequest) Reset() {
	*x = UpdateStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStoreRequest) ProtoMessage() {}

func (x *UpdateStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStoreRequest.ProtoReflect.Descriptor instead.
func (*UpdateStoreRequest) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateStoreRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateStoreRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UpdateStoreRequest) GetOwners() *_type.StringList {
	if x != nil {
		return x.Owners
	}
	return nil
}

func (x *UpdateStoreRequest) GetUploaders() *_type.StringList {
	if x != nil {
		return x.Uploaders
	}
	return nil
}

func (x *UpdateStoreRequest) GetViewers() *UpdateStoreRequest_ViewersList {
	if x != nil {
		return x.Viewers
	}
	return nil
}

// A request to delete a store
type DeleteStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the store to delete
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteStoreRequest) Reset() {
	*x = DeleteStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStoreRequest) ProtoMessage() {}

func (x *DeleteStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStoreRequest.ProtoReflect.Descriptor instead.
func (*DeleteStoreRequest) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteStoreRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// An indexed file within a store.
type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the store containing the file
	StoreId string `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// name of the fil3
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	// size of the file in bytes
	Size int64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	// timestamp when the file was uploaded
	UploadTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=upload_time,json=uploadTime,proto3" json:"upload_time,omitempty"`
	// GCS signed link where file can be downloaded
	Url string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	// The current state of the file
	State File_State `protobuf:"varint,6,opt,name=state,proto3,enum=ai.File_State" json:"state,omitempty"`
	// A message describing the current state of the file
	StateReason string `protobuf:"bytes,7,opt,name=state_reason,json=stateReason,proto3" json:"state_reason,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{11}
}

func (x *File) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *File) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *File) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *File) GetUploadTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UploadTime
	}
	return nil
}

func (x *File) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *File) GetState() File_State {
	if x != nil {
		return x.State
	}
	return File_STATE_UNSPECIFIED
}

func (x *File) GetStateReason() string {
	if x != nil {
		return x.StateReason
	}
	return ""
}

// A request to upload and index a file in a store.
type UploadFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the store
	StoreId string `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// name of the file
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	// User-specified content type of the file.
	// If no value is provided, the server will attempt to guess the content type using the extension of the file. Unknown
	// extensions will default to application/octet-stream.
	ContentType string `protobuf:"bytes,3,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	// Source URL of the file. This is the URL that will be provided when citing this file as a source.
	// If no value is provided, an ephemeral Google Cloud Storage URL will be generated.
	SourceUrl string `protobuf:"bytes,4,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`
}

func (x *UploadFileRequest) Reset() {
	*x = UploadFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileRequest) ProtoMessage() {}

func (x *UploadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileRequest.ProtoReflect.Descriptor instead.
func (*UploadFileRequest) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{12}
}

func (x *UploadFileRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *UploadFileRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UploadFileRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *UploadFileRequest) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

// Response to a unary upload file request
type UploadFileUnaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the store
	StoreId string `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// name of the file
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	// GCS signed link where file can be uploaded
	// Client should call this URL with an HTTP PUT and include the contents of the file as the body of the request.
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	// The set of headers that MUST be included with the HTTP request to the upload url
	Headers map[string]string `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UploadFileUnaryResponse) Reset() {
	*x = UploadFileUnaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileUnaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileUnaryResponse) ProtoMessage() {}

func (x *UploadFileUnaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileUnaryResponse.ProtoReflect.Descriptor instead.
func (*UploadFileUnaryResponse) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{13}
}

func (x *UploadFileUnaryResponse) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *UploadFileUnaryResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UploadFileUnaryResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UploadFileUnaryResponse) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

// An event in the file upload process.
type UploadFileEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the store
	StoreId string `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// name of the file
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	// Payload of the event
	//
	// Types that are assignable to Event:
	//
	//	*UploadFileEvent_Allocated_
	Event isUploadFileEvent_Event `protobuf_oneof:"event"`
}

func (x *UploadFileEvent) Reset() {
	*x = UploadFileEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileEvent) ProtoMessage() {}

func (x *UploadFileEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileEvent.ProtoReflect.Descriptor instead.
func (*UploadFileEvent) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{14}
}

func (x *UploadFileEvent) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *UploadFileEvent) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (m *UploadFileEvent) GetEvent() isUploadFileEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *UploadFileEvent) GetAllocated() *UploadFileEvent_Allocated {
	if x, ok := x.GetEvent().(*UploadFileEvent_Allocated_); ok {
		return x.Allocated
	}
	return nil
}

type isUploadFileEvent_Event interface {
	isUploadFileEvent_Event()
}

type UploadFileEvent_Allocated_ struct {
	Allocated *UploadFileEvent_Allocated `protobuf:"bytes,3,opt,name=allocated,proto3,oneof"`
}

func (*UploadFileEvent_Allocated_) isUploadFileEvent_Event() {}

// A request to get the current state of a file in a store
type GetFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the store
	StoreId string `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// name of the file
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *GetFileRequest) Reset() {
	*x = GetFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileRequest) ProtoMessage() {}

func (x *GetFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileRequest.ProtoReflect.Descriptor instead.
func (*GetFileRequest) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{15}
}

func (x *GetFileRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *GetFileRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

// A request to list the files in a store
type ListFilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the store
	StoreId string `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
}

func (x *ListFilesRequest) Reset() {
	*x = ListFilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesRequest) ProtoMessage() {}

func (x *ListFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesRequest.ProtoReflect.Descriptor instead.
func (*ListFilesRequest) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{16}
}

func (x *ListFilesRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

// A response containing a list of files in a store
type ListFilesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list of files in the store
	Files []*File `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *ListFilesResponse) Reset() {
	*x = ListFilesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesResponse) ProtoMessage() {}

func (x *ListFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesResponse.ProtoReflect.Descriptor instead.
func (*ListFilesResponse) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{17}
}

func (x *ListFilesResponse) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

// A request to delete a file from a store
type DeleteFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the store
	StoreId string `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// name of the file
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *DeleteFileRequest) Reset() {
	*x = DeleteFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileRequest) ProtoMessage() {}

func (x *DeleteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileRequest.ProtoReflect.Descriptor instead.
func (*DeleteFileRequest) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteFileRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *DeleteFileRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

// Request message for `TestStorePermissions` method.
type TestStorePermissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED: THe ID of the Store to test permissions for.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// REQUIRED: The set of permissions to test.
	// Currently supported permissions are:
	// - `files.get`
	// - `files.list`
	// - `files.upload`
	// - `files.delete`
	// - `stores.get`
	// - `stores.update`
	// - `stores.delete`
	Permissions []string `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *TestStorePermissionsRequest) Reset() {
	*x = TestStorePermissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestStorePermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestStorePermissionsRequest) ProtoMessage() {}

func (x *TestStorePermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestStorePermissionsRequest.ProtoReflect.Descriptor instead.
func (*TestStorePermissionsRequest) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{19}
}

func (x *TestStorePermissionsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TestStorePermissionsRequest) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// Response message for `TestStorePermissions` method.
type TestStorePermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The set of permission the user has on the Store.
	Permissions []string `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *TestStorePermissionsResponse) Reset() {
	*x = TestStorePermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestStorePermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestStorePermissionsResponse) ProtoMessage() {}

func (x *TestStorePermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestStorePermissionsResponse.ProtoReflect.Descriptor instead.
func (*TestStorePermissionsResponse) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{20}
}

func (x *TestStorePermissionsResponse) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// FileIndexEvent is an event indicating that a file has been indexed or deleted
type FileIndexEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the event
	EventId string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// type of the event
	EventType FileIndexEvent_EventType `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3,enum=ai.FileIndexEvent_EventType" json:"event_type,omitempty"`
	// timestamp of the event
	EventTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=event_time,json=eventTime,proto3" json:"event_time,omitempty"`
	// data of the event
	Data *FileIndexEvent_EventData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FileIndexEvent) Reset() {
	*x = FileIndexEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileIndexEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileIndexEvent) ProtoMessage() {}

func (x *FileIndexEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileIndexEvent.ProtoReflect.Descriptor instead.
func (*FileIndexEvent) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{21}
}

func (x *FileIndexEvent) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *FileIndexEvent) GetEventType() FileIndexEvent_EventType {
	if x != nil {
		return x.EventType
	}
	return FileIndexEvent_EVENT_TYPE_UNSPECIFIED
}

func (x *FileIndexEvent) GetEventTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EventTime
	}
	return nil
}

func (x *FileIndexEvent) GetData() *FileIndexEvent_EventData {
	if x != nil {
		return x.Data
	}
	return nil
}

type IndexJobEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId   string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=event_time,json=eventTime,proto3" json:"event_time,omitempty"`
	// Types that are assignable to Data:
	//
	//	*IndexJobEvent_JobRequested_
	//	*IndexJobEvent_JobStarted_
	//	*IndexJobEvent_JobSucceeded_
	//	*IndexJobEvent_JobFailed_
	Data isIndexJobEvent_Data `protobuf_oneof:"data"`
}

func (x *IndexJobEvent) Reset() {
	*x = IndexJobEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexJobEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexJobEvent) ProtoMessage() {}

func (x *IndexJobEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexJobEvent.ProtoReflect.Descriptor instead.
func (*IndexJobEvent) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{22}
}

func (x *IndexJobEvent) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *IndexJobEvent) GetEventTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EventTime
	}
	return nil
}

func (m *IndexJobEvent) GetData() isIndexJobEvent_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *IndexJobEvent) GetJobRequested() *IndexJobEvent_JobRequested {
	if x, ok := x.GetData().(*IndexJobEvent_JobRequested_); ok {
		return x.JobRequested
	}
	return nil
}

func (x *IndexJobEvent) GetJobStarted() *IndexJobEvent_JobStarted {
	if x, ok := x.GetData().(*IndexJobEvent_JobStarted_); ok {
		return x.JobStarted
	}
	return nil
}

func (x *IndexJobEvent) GetJobSucceeded() *IndexJobEvent_JobSucceeded {
	if x, ok := x.GetData().(*IndexJobEvent_JobSucceeded_); ok {
		return x.JobSucceeded
	}
	return nil
}

func (x *IndexJobEvent) GetJobFailed() *IndexJobEvent_JobFailed {
	if x, ok := x.GetData().(*IndexJobEvent_JobFailed_); ok {
		return x.JobFailed
	}
	return nil
}

type isIndexJobEvent_Data interface {
	isIndexJobEvent_Data()
}

type IndexJobEvent_JobRequested_ struct {
	JobRequested *IndexJobEvent_JobRequested `protobuf:"bytes,6,opt,name=job_requested,json=jobRequested,proto3,oneof"`
}

type IndexJobEvent_JobStarted_ struct {
	JobStarted *IndexJobEvent_JobStarted `protobuf:"bytes,7,opt,name=job_started,json=jobStarted,proto3,oneof"`
}

type IndexJobEvent_JobSucceeded_ struct {
	JobSucceeded *IndexJobEvent_JobSucceeded `protobuf:"bytes,8,opt,name=job_succeeded,json=jobSucceeded,proto3,oneof"`
}

type IndexJobEvent_JobFailed_ struct {
	JobFailed *IndexJobEvent_JobFailed `protobuf:"bytes,9,opt,name=job_failed,json=jobFailed,proto3,oneof"`
}

func (*IndexJobEvent_JobRequested_) isIndexJobEvent_Data() {}

func (*IndexJobEvent_JobStarted_) isIndexJobEvent_Data() {}

func (*IndexJobEvent_JobSucceeded_) isIndexJobEvent_Data() {}

func (*IndexJobEvent_JobFailed_) isIndexJobEvent_Data() {}

// A list of viewers. This is in a wrapper type so that we can allow for partial updates of a store
// Values must be either:
// - `domain:example.com` to allow all users in the domain to view the store
// - `user:user@example.com` to allow a specific user to view the store
type UpdateStoreRequest_ViewersList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of viewers
	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *UpdateStoreRequest_ViewersList) Reset() {
	*x = UpdateStoreRequest_ViewersList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStoreRequest_ViewersList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStoreRequest_ViewersList) ProtoMessage() {}

func (x *UpdateStoreRequest_ViewersList) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStoreRequest_ViewersList.ProtoReflect.Descriptor instead.
func (*UpdateStoreRequest_ViewersList) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{9, 0}
}

func (x *UpdateStoreRequest_ViewersList) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// An event payload indicating that storage for a file has been allocated.
// Clients should use the provided URL to upload the file.
type UploadFileEvent_Allocated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// GCS signed link where file can be uploaded
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// The set of headers that MUST be included with the HTTP request to the upload url
	Headers map[string]string `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UploadFileEvent_Allocated) Reset() {
	*x = UploadFileEvent_Allocated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileEvent_Allocated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileEvent_Allocated) ProtoMessage() {}

func (x *UploadFileEvent_Allocated) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileEvent_Allocated.ProtoReflect.Descriptor instead.
func (*UploadFileEvent_Allocated) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{14, 0}
}

func (x *UploadFileEvent_Allocated) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UploadFileEvent_Allocated) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

type FileIndexEvent_EventData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the store
	StoreId string `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// name of the file
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	// size of the file in bytes
	Size uint64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	// md5 hash of the file
	Md5 string `protobuf:"bytes,4,opt,name=md5,proto3" json:"md5,omitempty"`
	// timestamp when the file was created in GCS
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// reason for the event
	Reason string `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *FileIndexEvent_EventData) Reset() {
	*x = FileIndexEvent_EventData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileIndexEvent_EventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileIndexEvent_EventData) ProtoMessage() {}

func (x *FileIndexEvent_EventData) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileIndexEvent_EventData.ProtoReflect.Descriptor instead.
func (*FileIndexEvent_EventData) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{21, 0}
}

func (x *FileIndexEvent_EventData) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *FileIndexEvent_EventData) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileIndexEvent_EventData) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileIndexEvent_EventData) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *FileIndexEvent_EventData) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *FileIndexEvent_EventData) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type IndexJobEvent_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Md5        string                 `protobuf:"bytes,2,opt,name=md5,proto3" json:"md5,omitempty"`
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *IndexJobEvent_File) Reset() {
	*x = IndexJobEvent_File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexJobEvent_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexJobEvent_File) ProtoMessage() {}

func (x *IndexJobEvent_File) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexJobEvent_File.ProtoReflect.Descriptor instead.
func (*IndexJobEvent_File) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{22, 0}
}

func (x *IndexJobEvent_File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IndexJobEvent_File) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *IndexJobEvent_File) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

type IndexJobEvent_Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BatchId  string                  `protobuf:"bytes,2,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	Action   IndexJobEvent_JobAction `protobuf:"varint,3,opt,name=action,proto3,enum=ai.IndexJobEvent_JobAction" json:"action,omitempty"`
	ExecName string                  `protobuf:"bytes,4,opt,name=exec_name,json=execName,proto3" json:"exec_name,omitempty"`
}

func (x *IndexJobEvent_Job) Reset() {
	*x = IndexJobEvent_Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexJobEvent_Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexJobEvent_Job) ProtoMessage() {}

func (x *IndexJobEvent_Job) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexJobEvent_Job.ProtoReflect.Descriptor instead.
func (*IndexJobEvent_Job) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{22, 1}
}

func (x *IndexJobEvent_Job) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IndexJobEvent_Job) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *IndexJobEvent_Job) GetAction() IndexJobEvent_JobAction {
	if x != nil {
		return x.Action
	}
	return IndexJobEvent_JOB_ACTION_UNSPECIFIED
}

func (x *IndexJobEvent_Job) GetExecName() string {
	if x != nil {
		return x.ExecName
	}
	return ""
}

type IndexJobEvent_JobRequested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreId string              `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	File    *IndexJobEvent_File `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	Job     *IndexJobEvent_Job  `protobuf:"bytes,3,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *IndexJobEvent_JobRequested) Reset() {
	*x = IndexJobEvent_JobRequested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexJobEvent_JobRequested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexJobEvent_JobRequested) ProtoMessage() {}

func (x *IndexJobEvent_JobRequested) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexJobEvent_JobRequested.ProtoReflect.Descriptor instead.
func (*IndexJobEvent_JobRequested) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{22, 2}
}

func (x *IndexJobEvent_JobRequested) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *IndexJobEvent_JobRequested) GetFile() *IndexJobEvent_File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *IndexJobEvent_JobRequested) GetJob() *IndexJobEvent_Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type IndexJobEvent_JobStarted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreId string              `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	File    *IndexJobEvent_File `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	Job     *IndexJobEvent_Job  `protobuf:"bytes,3,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *IndexJobEvent_JobStarted) Reset() {
	*x = IndexJobEvent_JobStarted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexJobEvent_JobStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexJobEvent_JobStarted) ProtoMessage() {}

func (x *IndexJobEvent_JobStarted) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexJobEvent_JobStarted.ProtoReflect.Descriptor instead.
func (*IndexJobEvent_JobStarted) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{22, 3}
}

func (x *IndexJobEvent_JobStarted) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *IndexJobEvent_JobStarted) GetFile() *IndexJobEvent_File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *IndexJobEvent_JobStarted) GetJob() *IndexJobEvent_Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type IndexJobEvent_JobSucceeded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreId   string              `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	File      *IndexJobEvent_File `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	Job       *IndexJobEvent_Job  `protobuf:"bytes,3,opt,name=job,proto3" json:"job,omitempty"`
	NInserted uint32              `protobuf:"varint,4,opt,name=n_inserted,json=nInserted,proto3" json:"n_inserted,omitempty"`
	NDeleted  uint32              `protobuf:"varint,5,opt,name=n_deleted,json=nDeleted,proto3" json:"n_deleted,omitempty"`
}

func (x *IndexJobEvent_JobSucceeded) Reset() {
	*x = IndexJobEvent_JobSucceeded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexJobEvent_JobSucceeded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexJobEvent_JobSucceeded) ProtoMessage() {}

func (x *IndexJobEvent_JobSucceeded) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexJobEvent_JobSucceeded.ProtoReflect.Descriptor instead.
func (*IndexJobEvent_JobSucceeded) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{22, 4}
}

func (x *IndexJobEvent_JobSucceeded) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *IndexJobEvent_JobSucceeded) GetFile() *IndexJobEvent_File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *IndexJobEvent_JobSucceeded) GetJob() *IndexJobEvent_Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *IndexJobEvent_JobSucceeded) GetNInserted() uint32 {
	if x != nil {
		return x.NInserted
	}
	return 0
}

func (x *IndexJobEvent_JobSucceeded) GetNDeleted() uint32 {
	if x != nil {
		return x.NDeleted
	}
	return 0
}

type IndexJobEvent_JobFailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreId       string              `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	File          *IndexJobEvent_File `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	Job           *IndexJobEvent_Job  `protobuf:"bytes,3,opt,name=job,proto3" json:"job,omitempty"`
	FailureReason string              `protobuf:"bytes,4,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
}

func (x *IndexJobEvent_JobFailed) Reset() {
	*x = IndexJobEvent_JobFailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_stores_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexJobEvent_JobFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexJobEvent_JobFailed) ProtoMessage() {}

func (x *IndexJobEvent_JobFailed) ProtoReflect() protoreflect.Message {
	mi := &file_ai_stores_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexJobEvent_JobFailed.ProtoReflect.Descriptor instead.
func (*IndexJobEvent_JobFailed) Descriptor() ([]byte, []int) {
	return file_ai_stores_proto_rawDescGZIP(), []int{22, 5}
}

func (x *IndexJobEvent_JobFailed) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *IndexJobEvent_JobFailed) GetFile() *IndexJobEvent_File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *IndexJobEvent_JobFailed) GetJob() *IndexJobEvent_Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *IndexJobEvent_JobFailed) GetFailureReason() string {
	if x != nil {
		return x.FailureReason
	}
	return ""
}

var File_ai_stores_proto protoreflect.FileDescriptor

var file_ai_stores_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x61, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x61, 0x69, 0x1a, 0x12, 0x61, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x80, 0x02, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x42, 0x79, 0x12, 0x18,
	0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18,
	0x01, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xec, 0x01, 0x0a, 0x0f, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2f, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x45, 0x6d,
	0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x05, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x4f,
	0x50, 0x45, 0x4e, 0x41, 0x49, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x45, 0x4d, 0x42, 0x45, 0x44,
	0x44, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x44, 0x41, 0x5f, 0x30, 0x30, 0x32, 0x10, 0x01, 0x12, 0x21,
	0x0a, 0x1d, 0x4f, 0x50, 0x45, 0x4e, 0x41, 0x49, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x45, 0x4d,
	0x42, 0x45, 0x44, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x33, 0x5f, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x10,
	0x02, 0x12, 0x21, 0x0a, 0x1d, 0x4f, 0x50, 0x45, 0x4e, 0x41, 0x49, 0x5f, 0x54, 0x45, 0x58, 0x54,
	0x5f, 0x45, 0x4d, 0x42, 0x45, 0x44, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x33, 0x5f, 0x4c, 0x41, 0x52,
	0x47, 0x45, 0x10, 0x03, 0x22, 0x54, 0x0a, 0x0e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x6f,
	0x76, 0x65, 0x72, 0x6c, 0x61, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x70, 0x22, 0x52, 0x0a, 0x0b, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x46,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x94, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x3b, 0x0a, 0x0f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x69, 0x2e, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3e, 0x0a,
	0x10, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x69, 0x2e, 0x45, 0x6d, 0x62,
	0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0f, 0x65, 0x6d,
	0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x22, 0x21, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x37, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x06, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x69,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x06, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x8c,
	0x02, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x69, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x31, 0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x69, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3c, 0x0a, 0x07, 0x76, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x69, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x07, 0x76,
	0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x1a, 0x25, 0x0a, 0x0b, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x24, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xbe, 0x02, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x61, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0x53, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x49,
	0x4e, 0x44, 0x45, 0x58, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x03, 0x22, 0x8c, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x55, 0x72, 0x6c, 0x22, 0xe2, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x42, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x69, 0x2e, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x3a, 0x0a, 0x0c,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb2, 0x02, 0x0a, 0x0f, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x69, 0x2e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x1a, 0x9f, 0x01, 0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x44, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x69, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x47, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x61, 0x69, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x4a, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x1b, 0x54, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x30, 0xba, 0x48, 0x2d, 0xba, 0x01, 0x2a, 0x0a, 0x09, 0x6e, 0x6f, 0x6e, 0x2d,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x11, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x6e,
	0x6f, 0x6e, 0x2d, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0a, 0x74, 0x68, 0x69, 0x73, 0x20, 0x21,
	0x3d, 0x20, 0x22, 0x22, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x08, 0xba,
	0x48, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x40, 0x0a, 0x1c, 0x54, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xfa, 0x03, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x61, 0x69, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x69, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xbd,
	0x01, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x63,
	0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x44, 0x45, 0x58,
	0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a,
	0x07, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45,
	0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x04, 0x22, 0xdf, 0x0a, 0x0a, 0x0d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4a, 0x6f, 0x62,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x39, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x0d, 0x6a,
	0x6f, 0x62, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4a, 0x6f, 0x62,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x6a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x12, 0x3f, 0x0a, 0x0b, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x69, 0x2e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x4a, 0x6f, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x6a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x0d, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x65, 0x64, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x69, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x4a, 0x6f, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x6f,
	0x62, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x6a, 0x6f,
	0x62, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0a, 0x6a, 0x6f,
	0x62, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x61, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4a, 0x6f, 0x62, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x4a, 0x6f, 0x62, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x48, 0x00, 0x52, 0x09, 0x6a,
	0x6f, 0x62, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x1a, 0x69, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x1a, 0x86, 0x01, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x61, 0x69, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x4a, 0x6f, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x6f,
	0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x7e, 0x0a, 0x0c,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x4a, 0x6f, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x61, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4a, 0x6f, 0x62, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x1a, 0x7c, 0x0a, 0x0a,
	0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4a, 0x6f,
	0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x27, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x61, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4a, 0x6f, 0x62, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x1a, 0xba, 0x01, 0x0a, 0x0c, 0x4a,
	0x6f, 0x62, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4a,
	0x6f, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x27, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x61, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4a, 0x6f, 0x62, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x1d, 0x0a, 0x0a, 0x6e,
	0x5f, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x6e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x5f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x1a, 0xa2, 0x01, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x61, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4a, 0x6f, 0x62, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x03,
	0x6a, 0x6f, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x69, 0x2e, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x4a, 0x6f, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x6f, 0x62,
	0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x09,
	0x4a, 0x6f, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x16, 0x4a, 0x4f, 0x42,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4e, 0x53, 0x45, 0x52, 0x54, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x22, 0x4e, 0x0a,
	0x08, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x4a, 0x4f, 0x42,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0d,
	0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x42, 0x06, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xe8, 0x05, 0x0a, 0x06, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73,
	0x12, 0x32, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12,
	0x16, 0x2e, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x61, 0x69, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x12, 0x13, 0x2e, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x61, 0x69, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73,
	0x12, 0x15, 0x2e, 0x61, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x69, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x32, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x12, 0x16, 0x2e, 0x61, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x61, 0x69, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x2e, 0x61, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x61, 0x69, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x15, 0x2e, 0x61, 0x69, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x61, 0x69,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x22, 0x00, 0x30, 0x01, 0x12, 0x47, 0x0a, 0x0f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x15, 0x2e, 0x61, 0x69, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x61, 0x69, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x6e,
	0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x29, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x2e, 0x61, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x08, 0x2e, 0x61,
	0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x2e, 0x61, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x69,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x15, 0x2e, 0x61, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x14, 0x54, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x2e, 0x61, 0x69,
	0x2e, 0x54, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61,
	0x69, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70,
	0x65, 0x61, 0x6b, 0x36, 0x2d, 0x73, 0x69, 0x74, 0x65, 0x73, 0x2f, 0x72, 0x32, 0x67, 0x32, 0x2d,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x69, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ai_stores_proto_rawDescOnce sync.Once
	file_ai_stores_proto_rawDescData = file_ai_stores_proto_rawDesc
)

func file_ai_stores_proto_rawDescGZIP() []byte {
	file_ai_stores_proto_rawDescOnce.Do(func() {
		file_ai_stores_proto_rawDescData = protoimpl.X.CompressGZIP(file_ai_stores_proto_rawDescData)
	})
	return file_ai_stores_proto_rawDescData
}

var file_ai_stores_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_ai_stores_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_ai_stores_proto_goTypes = []interface{}{
	(EmbeddingConfig_Model)(0),             // 0: ai.EmbeddingConfig.Model
	(File_State)(0),                        // 1: ai.File.State
	(FileIndexEvent_EventType)(0),          // 2: ai.FileIndexEvent.EventType
	(IndexJobEvent_JobAction)(0),           // 3: ai.IndexJobEvent.JobAction
	(IndexJobEvent_JobState)(0),            // 4: ai.IndexJobEvent.JobState
	(*Store)(nil),                          // 5: ai.Store
	(*EmbeddingConfig)(nil),                // 6: ai.EmbeddingConfig
	(*ChunkingConfig)(nil),                 // 7: ai.ChunkingConfig
	(*StoreConfig)(nil),                    // 8: ai.StoreConfig
	(*GetStoreConfigRequest)(nil),          // 9: ai.GetStoreConfigRequest
	(*CreateStoreRequest)(nil),             // 10: ai.CreateStoreRequest
	(*GetStoreRequest)(nil),                // 11: ai.GetStoreRequest
	(*ListStoresRequest)(nil),              // 12: ai.ListStoresRequest
	(*ListStoresResponse)(nil),             // 13: ai.ListStoresResponse
	(*UpdateStoreRequest)(nil),             // 14: ai.UpdateStoreRequest
	(*DeleteStoreRequest)(nil),             // 15: ai.DeleteStoreRequest
	(*File)(nil),                           // 16: ai.File
	(*UploadFileRequest)(nil),              // 17: ai.UploadFileRequest
	(*UploadFileUnaryResponse)(nil),        // 18: ai.UploadFileUnaryResponse
	(*UploadFileEvent)(nil),                // 19: ai.UploadFileEvent
	(*GetFileRequest)(nil),                 // 20: ai.GetFileRequest
	(*ListFilesRequest)(nil),               // 21: ai.ListFilesRequest
	(*ListFilesResponse)(nil),              // 22: ai.ListFilesResponse
	(*DeleteFileRequest)(nil),              // 23: ai.DeleteFileRequest
	(*TestStorePermissionsRequest)(nil),    // 24: ai.TestStorePermissionsRequest
	(*TestStorePermissionsResponse)(nil),   // 25: ai.TestStorePermissionsResponse
	(*FileIndexEvent)(nil),                 // 26: ai.FileIndexEvent
	(*IndexJobEvent)(nil),                  // 27: ai.IndexJobEvent
	(*UpdateStoreRequest_ViewersList)(nil), // 28: ai.UpdateStoreRequest.ViewersList
	nil,                                    // 29: ai.UploadFileUnaryResponse.HeadersEntry
	(*UploadFileEvent_Allocated)(nil),      // 30: ai.UploadFileEvent.Allocated
	nil,                                    // 31: ai.UploadFileEvent.Allocated.HeadersEntry
	(*FileIndexEvent_EventData)(nil),       // 32: ai.FileIndexEvent.EventData
	(*IndexJobEvent_File)(nil),             // 33: ai.IndexJobEvent.File
	(*IndexJobEvent_Job)(nil),              // 34: ai.IndexJobEvent.Job
	(*IndexJobEvent_JobRequested)(nil),     // 35: ai.IndexJobEvent.JobRequested
	(*IndexJobEvent_JobStarted)(nil),       // 36: ai.IndexJobEvent.JobStarted
	(*IndexJobEvent_JobSucceeded)(nil),     // 37: ai.IndexJobEvent.JobSucceeded
	(*IndexJobEvent_JobFailed)(nil),        // 38: ai.IndexJobEvent.JobFailed
	(*timestamppb.Timestamp)(nil),          // 39: google.protobuf.Timestamp
	(*structpb.Struct)(nil),                // 40: google.protobuf.Struct
	(*_type.StringList)(nil),               // 41: ai.type.StringList
	(*emptypb.Empty)(nil),                  // 42: google.protobuf.Empty
}
var file_ai_stores_proto_depIdxs = []int32{
	39, // 0: ai.Store.create_time:type_name -> google.protobuf.Timestamp
	0,  // 1: ai.EmbeddingConfig.model:type_name -> ai.EmbeddingConfig.Model
	40, // 2: ai.StoreConfig.config:type_name -> google.protobuf.Struct
	7,  // 3: ai.CreateStoreRequest.chunking_config:type_name -> ai.ChunkingConfig
	6,  // 4: ai.CreateStoreRequest.embedding_config:type_name -> ai.EmbeddingConfig
	5,  // 5: ai.ListStoresResponse.stores:type_name -> ai.Store
	41, // 6: ai.UpdateStoreRequest.owners:type_name -> ai.type.StringList
	41, // 7: ai.UpdateStoreRequest.uploaders:type_name -> ai.type.StringList
	28, // 8: ai.UpdateStoreRequest.viewers:type_name -> ai.UpdateStoreRequest.ViewersList
	39, // 9: ai.File.upload_time:type_name -> google.protobuf.Timestamp
	1,  // 10: ai.File.state:type_name -> ai.File.State
	29, // 11: ai.UploadFileUnaryResponse.headers:type_name -> ai.UploadFileUnaryResponse.HeadersEntry
	30, // 12: ai.UploadFileEvent.allocated:type_name -> ai.UploadFileEvent.Allocated
	16, // 13: ai.ListFilesResponse.files:type_name -> ai.File
	2,  // 14: ai.FileIndexEvent.event_type:type_name -> ai.FileIndexEvent.EventType
	39, // 15: ai.FileIndexEvent.event_time:type_name -> google.protobuf.Timestamp
	32, // 16: ai.FileIndexEvent.data:type_name -> ai.FileIndexEvent.EventData
	39, // 17: ai.IndexJobEvent.event_time:type_name -> google.protobuf.Timestamp
	35, // 18: ai.IndexJobEvent.job_requested:type_name -> ai.IndexJobEvent.JobRequested
	36, // 19: ai.IndexJobEvent.job_started:type_name -> ai.IndexJobEvent.JobStarted
	37, // 20: ai.IndexJobEvent.job_succeeded:type_name -> ai.IndexJobEvent.JobSucceeded
	38, // 21: ai.IndexJobEvent.job_failed:type_name -> ai.IndexJobEvent.JobFailed
	31, // 22: ai.UploadFileEvent.Allocated.headers:type_name -> ai.UploadFileEvent.Allocated.HeadersEntry
	39, // 23: ai.FileIndexEvent.EventData.create_time:type_name -> google.protobuf.Timestamp
	39, // 24: ai.IndexJobEvent.File.create_time:type_name -> google.protobuf.Timestamp
	3,  // 25: ai.IndexJobEvent.Job.action:type_name -> ai.IndexJobEvent.JobAction
	33, // 26: ai.IndexJobEvent.JobRequested.file:type_name -> ai.IndexJobEvent.File
	34, // 27: ai.IndexJobEvent.JobRequested.job:type_name -> ai.IndexJobEvent.Job
	33, // 28: ai.IndexJobEvent.JobStarted.file:type_name -> ai.IndexJobEvent.File
	34, // 29: ai.IndexJobEvent.JobStarted.job:type_name -> ai.IndexJobEvent.Job
	33, // 30: ai.IndexJobEvent.JobSucceeded.file:type_name -> ai.IndexJobEvent.File
	34, // 31: ai.IndexJobEvent.JobSucceeded.job:type_name -> ai.IndexJobEvent.Job
	33, // 32: ai.IndexJobEvent.JobFailed.file:type_name -> ai.IndexJobEvent.File
	34, // 33: ai.IndexJobEvent.JobFailed.job:type_name -> ai.IndexJobEvent.Job
	10, // 34: ai.Stores.CreateStore:input_type -> ai.CreateStoreRequest
	11, // 35: ai.Stores.GetStore:input_type -> ai.GetStoreRequest
	12, // 36: ai.Stores.ListStores:input_type -> ai.ListStoresRequest
	14, // 37: ai.Stores.UpdateStore:input_type -> ai.UpdateStoreRequest
	15, // 38: ai.Stores.DeleteStore:input_type -> ai.DeleteStoreRequest
	9,  // 39: ai.Stores.GetStoreConfig:input_type -> ai.GetStoreConfigRequest
	17, // 40: ai.Stores.UploadFile:input_type -> ai.UploadFileRequest
	17, // 41: ai.Stores.UploadFileUnary:input_type -> ai.UploadFileRequest
	20, // 42: ai.Stores.GetFile:input_type -> ai.GetFileRequest
	21, // 43: ai.Stores.ListFiles:input_type -> ai.ListFilesRequest
	23, // 44: ai.Stores.DeleteFile:input_type -> ai.DeleteFileRequest
	24, // 45: ai.Stores.TestStorePermissions:input_type -> ai.TestStorePermissionsRequest
	5,  // 46: ai.Stores.CreateStore:output_type -> ai.Store
	5,  // 47: ai.Stores.GetStore:output_type -> ai.Store
	13, // 48: ai.Stores.ListStores:output_type -> ai.ListStoresResponse
	5,  // 49: ai.Stores.UpdateStore:output_type -> ai.Store
	42, // 50: ai.Stores.DeleteStore:output_type -> google.protobuf.Empty
	8,  // 51: ai.Stores.GetStoreConfig:output_type -> ai.StoreConfig
	19, // 52: ai.Stores.UploadFile:output_type -> ai.UploadFileEvent
	18, // 53: ai.Stores.UploadFileUnary:output_type -> ai.UploadFileUnaryResponse
	16, // 54: ai.Stores.GetFile:output_type -> ai.File
	22, // 55: ai.Stores.ListFiles:output_type -> ai.ListFilesResponse
	42, // 56: ai.Stores.DeleteFile:output_type -> google.protobuf.Empty
	25, // 57: ai.Stores.TestStorePermissions:output_type -> ai.TestStorePermissionsResponse
	46, // [46:58] is the sub-list for method output_type
	34, // [34:46] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_ai_stores_proto_init() }
func file_ai_stores_proto_init() {
	if File_ai_stores_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ai_stores_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Store); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddingConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChunkingConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoreConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStoresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStoresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileUnaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFilesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestStorePermissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestStorePermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileIndexEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexJobEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStoreRequest_ViewersList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileEvent_Allocated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileIndexEvent_EventData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexJobEvent_File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexJobEvent_Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexJobEvent_JobRequested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexJobEvent_JobStarted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexJobEvent_JobSucceeded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_stores_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexJobEvent_JobFailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ai_stores_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*UploadFileEvent_Allocated_)(nil),
	}
	file_ai_stores_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*IndexJobEvent_JobRequested_)(nil),
		(*IndexJobEvent_JobStarted_)(nil),
		(*IndexJobEvent_JobSucceeded_)(nil),
		(*IndexJobEvent_JobFailed_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ai_stores_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ai_stores_proto_goTypes,
		DependencyIndexes: file_ai_stores_proto_depIdxs,
		EnumInfos:         file_ai_stores_proto_enumTypes,
		MessageInfos:      file_ai_stores_proto_msgTypes,
	}.Build()
	File_ai_stores_proto = out.File
	file_ai_stores_proto_rawDesc = nil
	file_ai_stores_proto_goTypes = nil
	file_ai_stores_proto_depIdxs = nil
}
