// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: ai/assistants/v0/tools.proto

package assistantspb

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Tool_Parameter_Type int32

const (
	Tool_Parameter_TYPE_UNSPECIFIED Tool_Parameter_Type = 0
	Tool_Parameter_STRING           Tool_Parameter_Type = 1
	Tool_Parameter_NUMBER           Tool_Parameter_Type = 2
	Tool_Parameter_BOOLEAN          Tool_Parameter_Type = 3
	Tool_Parameter_ENUM             Tool_Parameter_Type = 4
)

// Enum value maps for Tool_Parameter_Type.
var (
	Tool_Parameter_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "STRING",
		2: "NUMBER",
		3: "BOOLEAN",
		4: "ENUM",
	}
	Tool_Parameter_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"STRING":           1,
		"NUMBER":           2,
		"BOOLEAN":          3,
		"ENUM":             4,
	}
)

func (x Tool_Parameter_Type) Enum() *Tool_Parameter_Type {
	p := new(Tool_Parameter_Type)
	*p = x
	return p
}

func (x Tool_Parameter_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Tool_Parameter_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_ai_assistants_v0_tools_proto_enumTypes[0].Descriptor()
}

func (Tool_Parameter_Type) Type() protoreflect.EnumType {
	return &file_ai_assistants_v0_tools_proto_enumTypes[0]
}

func (x Tool_Parameter_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Tool_Parameter_Type.Descriptor instead.
func (Tool_Parameter_Type) EnumDescriptor() ([]byte, []int) {
	return file_ai_assistants_v0_tools_proto_rawDescGZIP(), []int{0, 0, 0}
}

// The state of a ToolCall
type ToolCall_State int32

const (
	ToolCall_STATE_UNSPECIFIED ToolCall_State = 0
	ToolCall_RESPONSE_REQUIRED ToolCall_State = 1
	ToolCall_COMPLETED         ToolCall_State = 2
)

// Enum value maps for ToolCall_State.
var (
	ToolCall_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "RESPONSE_REQUIRED",
		2: "COMPLETED",
	}
	ToolCall_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"RESPONSE_REQUIRED": 1,
		"COMPLETED":         2,
	}
)

func (x ToolCall_State) Enum() *ToolCall_State {
	p := new(ToolCall_State)
	*p = x
	return p
}

func (x ToolCall_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ToolCall_State) Descriptor() protoreflect.EnumDescriptor {
	return file_ai_assistants_v0_tools_proto_enumTypes[1].Descriptor()
}

func (ToolCall_State) Type() protoreflect.EnumType {
	return &file_ai_assistants_v0_tools_proto_enumTypes[1]
}

func (x ToolCall_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ToolCall_State.Descriptor instead.
func (ToolCall_State) EnumDescriptor() ([]byte, []int) {
	return file_ai_assistants_v0_tools_proto_rawDescGZIP(), []int{1, 0}
}

// A tool/function definition for a model to use.
type Tool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the function
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Human-readable description of the function
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Parameters for the function
	Parameters []*Tool_Parameter `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *Tool) Reset() {
	*x = Tool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_assistants_v0_tools_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tool) ProtoMessage() {}

func (x *Tool) ProtoReflect() protoreflect.Message {
	mi := &file_ai_assistants_v0_tools_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tool.ProtoReflect.Descriptor instead.
func (*Tool) Descriptor() ([]byte, []int) {
	return file_ai_assistants_v0_tools_proto_rawDescGZIP(), []int{0}
}

func (x *Tool) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tool) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Tool) GetParameters() []*Tool_Parameter {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// A request by the Assistant Run for the user to invoke a tool and provide a response
type ToolCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id of the tool call
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the tool being called
	ToolName string `protobuf:"bytes,2,opt,name=tool_name,json=toolName,proto3" json:"tool_name,omitempty"`
	// Arguments to the tool
	Arguments string `protobuf:"bytes,3,opt,name=arguments,proto3" json:"arguments,omitempty"`
	// The state of the tool call
	State ToolCall_State `protobuf:"varint,4,opt,name=state,proto3,enum=ai.assistants.v0.ToolCall_State" json:"state,omitempty"`
	// Indicates that the tool call failed
	Error bool `protobuf:"varint,5,opt,name=error,proto3" json:"error,omitempty"`
	// The response value to the tool call
	// This is only set when the user has responded to the tool call
	Response string `protobuf:"bytes,6,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *ToolCall) Reset() {
	*x = ToolCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_assistants_v0_tools_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToolCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolCall) ProtoMessage() {}

func (x *ToolCall) ProtoReflect() protoreflect.Message {
	mi := &file_ai_assistants_v0_tools_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolCall.ProtoReflect.Descriptor instead.
func (*ToolCall) Descriptor() ([]byte, []int) {
	return file_ai_assistants_v0_tools_proto_rawDescGZIP(), []int{1}
}

func (x *ToolCall) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ToolCall) GetToolName() string {
	if x != nil {
		return x.ToolName
	}
	return ""
}

func (x *ToolCall) GetArguments() string {
	if x != nil {
		return x.Arguments
	}
	return ""
}

func (x *ToolCall) GetState() ToolCall_State {
	if x != nil {
		return x.State
	}
	return ToolCall_STATE_UNSPECIFIED
}

func (x *ToolCall) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ToolCall) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

// A parameter definition for a tool
type Tool_Parameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the parameter
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Human-readable description of the parameter
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Type of the parameter
	// TODO: What about complex types?
	Type Tool_Parameter_Type `protobuf:"varint,3,opt,name=type,proto3,enum=ai.assistants.v0.Tool_Parameter_Type" json:"type,omitempty"`
	// Possible values for the parameter when the type is ENUM
	Values []string `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
	// Whether the parameter is required
	Required bool `protobuf:"varint,5,opt,name=required,proto3" json:"required,omitempty"`
}

func (x *Tool_Parameter) Reset() {
	*x = Tool_Parameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_assistants_v0_tools_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tool_Parameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tool_Parameter) ProtoMessage() {}

func (x *Tool_Parameter) ProtoReflect() protoreflect.Message {
	mi := &file_ai_assistants_v0_tools_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tool_Parameter.ProtoReflect.Descriptor instead.
func (*Tool_Parameter) Descriptor() ([]byte, []int) {
	return file_ai_assistants_v0_tools_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Tool_Parameter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tool_Parameter) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Tool_Parameter) GetType() Tool_Parameter_Type {
	if x != nil {
		return x.Type
	}
	return Tool_Parameter_TYPE_UNSPECIFIED
}

func (x *Tool_Parameter) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *Tool_Parameter) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

var File_ai_assistants_v0_tools_proto protoreflect.FileDescriptor

var file_ai_assistants_v0_tools_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x69, 0x2f, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x2f,
	0x76, 0x30, 0x2f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x61, 0x69, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x30,
	0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfa, 0x04,
	0x0a, 0x04, 0x54, 0x6f, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0a,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73,
	0x2e, 0x76, 0x30, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0xf9,
	0x03, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0xba, 0x48, 0x2d, 0xba,
	0x01, 0x2a, 0x0a, 0x09, 0x6e, 0x6f, 0x6e, 0x2d, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x11, 0x6d,
	0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x6e, 0x6f, 0x6e, 0x2d, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x0a, 0x74, 0x68, 0x69, 0x73, 0x20, 0x21, 0x3d, 0x20, 0x22, 0x22, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0xba, 0x48, 0x2d, 0xba, 0x01, 0x2a, 0x0a,
	0x09, 0x6e, 0x6f, 0x6e, 0x2d, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x11, 0x6d, 0x75, 0x73, 0x74,
	0x20, 0x62, 0x65, 0x20, 0x6e, 0x6f, 0x6e, 0x2d, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0a, 0x74,
	0x68, 0x69, 0x73, 0x20, 0x21, 0x3d, 0x20, 0x22, 0x22, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x68, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x2e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x2d, 0xba, 0x48, 0x2a,
	0xba, 0x01, 0x27, 0x0a, 0x08, 0x6e, 0x6f, 0x6e, 0x2d, 0x7a, 0x65, 0x72, 0x6f, 0x12, 0x10, 0x6d,
	0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x6e, 0x6f, 0x6e, 0x2d, 0x7a, 0x65, 0x72, 0x6f, 0x1a,
	0x09, 0x74, 0x68, 0x69, 0x73, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x22, 0x4b, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4f,
	0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x4e, 0x55, 0x4d, 0x10,
	0x04, 0x3a, 0x67, 0xba, 0x48, 0x64, 0x1a, 0x62, 0x0a, 0x0b, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x2a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x6d, 0x75,
	0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x6e, 0x6f, 0x6e, 0x2d, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x20,
	0x77, 0x68, 0x65, 0x6e, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x69, 0x73, 0x20, 0x45, 0x4e, 0x55,
	0x4d, 0x1a, 0x27, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x20, 0x21, 0x3d, 0x20,
	0x34, 0x20, 0x7c, 0x7c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x22, 0x85, 0x02, 0x0a, 0x08, 0x54,
	0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x6f, 0x6c, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x6f, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x36, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x73, 0x2e, 0x76, 0x30, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11,
	0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44,
	0x10, 0x02, 0x42, 0x47, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x70, 0x65, 0x61, 0x6b, 0x36, 0x2d, 0x73, 0x69, 0x74, 0x65, 0x73, 0x2f, 0x72, 0x32, 0x67,
	0x32, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x69,
	0x2f, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x30, 0x3b, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_ai_assistants_v0_tools_proto_rawDescOnce sync.Once
	file_ai_assistants_v0_tools_proto_rawDescData = file_ai_assistants_v0_tools_proto_rawDesc
)

func file_ai_assistants_v0_tools_proto_rawDescGZIP() []byte {
	file_ai_assistants_v0_tools_proto_rawDescOnce.Do(func() {
		file_ai_assistants_v0_tools_proto_rawDescData = protoimpl.X.CompressGZIP(file_ai_assistants_v0_tools_proto_rawDescData)
	})
	return file_ai_assistants_v0_tools_proto_rawDescData
}

var file_ai_assistants_v0_tools_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_ai_assistants_v0_tools_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ai_assistants_v0_tools_proto_goTypes = []interface{}{
	(Tool_Parameter_Type)(0), // 0: ai.assistants.v0.Tool.Parameter.Type
	(ToolCall_State)(0),      // 1: ai.assistants.v0.ToolCall.State
	(*Tool)(nil),             // 2: ai.assistants.v0.Tool
	(*ToolCall)(nil),         // 3: ai.assistants.v0.ToolCall
	(*Tool_Parameter)(nil),   // 4: ai.assistants.v0.Tool.Parameter
}
var file_ai_assistants_v0_tools_proto_depIdxs = []int32{
	4, // 0: ai.assistants.v0.Tool.parameters:type_name -> ai.assistants.v0.Tool.Parameter
	1, // 1: ai.assistants.v0.ToolCall.state:type_name -> ai.assistants.v0.ToolCall.State
	0, // 2: ai.assistants.v0.Tool.Parameter.type:type_name -> ai.assistants.v0.Tool.Parameter.Type
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_ai_assistants_v0_tools_proto_init() }
func file_ai_assistants_v0_tools_proto_init() {
	if File_ai_assistants_v0_tools_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ai_assistants_v0_tools_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_assistants_v0_tools_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToolCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_assistants_v0_tools_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tool_Parameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ai_assistants_v0_tools_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ai_assistants_v0_tools_proto_goTypes,
		DependencyIndexes: file_ai_assistants_v0_tools_proto_depIdxs,
		EnumInfos:         file_ai_assistants_v0_tools_proto_enumTypes,
		MessageInfos:      file_ai_assistants_v0_tools_proto_msgTypes,
	}.Build()
	File_ai_assistants_v0_tools_proto = out.File
	file_ai_assistants_v0_tools_proto_rawDesc = nil
	file_ai_assistants_v0_tools_proto_goTypes = nil
	file_ai_assistants_v0_tools_proto_depIdxs = nil
}
