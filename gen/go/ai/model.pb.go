// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: ai/model.proto

// buf:lint:ignore PACKAGE_VERSION_SUFFIX

package ai

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Launch stage of the model
// buf:lint:ignore ENUM_VALUE_PREFIX
// buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
type Model_LaunchStage int32

const (
	Model_GA         Model_LaunchStage = 0
	Model_BETA       Model_LaunchStage = 1
	Model_DEPRECATED Model_LaunchStage = 2
)

// Enum value maps for Model_LaunchStage.
var (
	Model_LaunchStage_name = map[int32]string{
		0: "GA",
		1: "BETA",
		2: "DEPRECATED",
	}
	Model_LaunchStage_value = map[string]int32{
		"GA":         0,
		"BETA":       1,
		"DEPRECATED": 2,
	}
)

func (x Model_LaunchStage) Enum() *Model_LaunchStage {
	p := new(Model_LaunchStage)
	*p = x
	return p
}

func (x Model_LaunchStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Model_LaunchStage) Descriptor() protoreflect.EnumDescriptor {
	return file_ai_model_proto_enumTypes[0].Descriptor()
}

func (Model_LaunchStage) Type() protoreflect.EnumType {
	return &file_ai_model_proto_enumTypes[0]
}

func (x Model_LaunchStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Model_LaunchStage.Descriptor instead.
func (Model_LaunchStage) EnumDescriptor() ([]byte, []int) {
	return file_ai_model_proto_rawDescGZIP(), []int{0, 0}
}

// Input formats supported by the model
// buf:lint:ignore ENUM_VALUE_PREFIX
type Model_InputFormats int32

const (
	Model_INPUT_FORMAT_UNSPECIFIED Model_InputFormats = 0
	// The model accepts text input
	Model_TEXT Model_InputFormats = 1
	// The model accepts image input
	Model_IMAGE Model_InputFormats = 2
)

// Enum value maps for Model_InputFormats.
var (
	Model_InputFormats_name = map[int32]string{
		0: "INPUT_FORMAT_UNSPECIFIED",
		1: "TEXT",
		2: "IMAGE",
	}
	Model_InputFormats_value = map[string]int32{
		"INPUT_FORMAT_UNSPECIFIED": 0,
		"TEXT":                     1,
		"IMAGE":                    2,
	}
)

func (x Model_InputFormats) Enum() *Model_InputFormats {
	p := new(Model_InputFormats)
	*p = x
	return p
}

func (x Model_InputFormats) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Model_InputFormats) Descriptor() protoreflect.EnumDescriptor {
	return file_ai_model_proto_enumTypes[1].Descriptor()
}

func (Model_InputFormats) Type() protoreflect.EnumType {
	return &file_ai_model_proto_enumTypes[1]
}

func (x Model_InputFormats) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Model_InputFormats.Descriptor instead.
func (Model_InputFormats) EnumDescriptor() ([]byte, []int) {
	return file_ai_model_proto_rawDescGZIP(), []int{0, 1}
}

// Tags that indicate features or attributes of a model
// buf:lint:ignore ENUM_VALUE_PREFIX
type Model_Tag int32

const (
	Model_TAG_UNSPECIFIED  Model_Tag = 0
	Model_CREATIVE_WRITING Model_Tag = 1
	Model_CODING           Model_Tag = 2
	Model_FAST             Model_Tag = 3
	Model_ONLINE_ACCESS    Model_Tag = 4
)

// Enum value maps for Model_Tag.
var (
	Model_Tag_name = map[int32]string{
		0: "TAG_UNSPECIFIED",
		1: "CREATIVE_WRITING",
		2: "CODING",
		3: "FAST",
		4: "ONLINE_ACCESS",
	}
	Model_Tag_value = map[string]int32{
		"TAG_UNSPECIFIED":  0,
		"CREATIVE_WRITING": 1,
		"CODING":           2,
		"FAST":             3,
		"ONLINE_ACCESS":    4,
	}
)

func (x Model_Tag) Enum() *Model_Tag {
	p := new(Model_Tag)
	*p = x
	return p
}

func (x Model_Tag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Model_Tag) Descriptor() protoreflect.EnumDescriptor {
	return file_ai_model_proto_enumTypes[2].Descriptor()
}

func (Model_Tag) Type() protoreflect.EnumType {
	return &file_ai_model_proto_enumTypes[2]
}

func (x Model_Tag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Model_Tag.Descriptor instead.
func (Model_Tag) EnumDescriptor() ([]byte, []int) {
	return file_ai_model_proto_rawDescGZIP(), []int{0, 2}
}

type Model_Feature int32

const (
	Model_FEATURE_UNSPECIFIED Model_Feature = 0
	Model_TOOL_CALL           Model_Feature = 1
	Model_JSON_SCHEMA         Model_Feature = 2
)

// Enum value maps for Model_Feature.
var (
	Model_Feature_name = map[int32]string{
		0: "FEATURE_UNSPECIFIED",
		1: "TOOL_CALL",
		2: "JSON_SCHEMA",
	}
	Model_Feature_value = map[string]int32{
		"FEATURE_UNSPECIFIED": 0,
		"TOOL_CALL":           1,
		"JSON_SCHEMA":         2,
	}
)

func (x Model_Feature) Enum() *Model_Feature {
	p := new(Model_Feature)
	*p = x
	return p
}

func (x Model_Feature) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Model_Feature) Descriptor() protoreflect.EnumDescriptor {
	return file_ai_model_proto_enumTypes[3].Descriptor()
}

func (Model_Feature) Type() protoreflect.EnumType {
	return &file_ai_model_proto_enumTypes[3]
}

func (x Model_Feature) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Model_Feature.Descriptor instead.
func (Model_Feature) EnumDescriptor() ([]byte, []int) {
	return file_ai_model_proto_rawDescGZIP(), []int{0, 3}
}

// A model available to the chat engine.
type Model struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The machine readable name of the model
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The human readable name of the model
	DisplayName string `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Description of the model
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// The underlying model this model is an alias for
	// This will only be set for models that are aliases for other models.
	AliasFor string `protobuf:"bytes,6,opt,name=alias_for,json=aliasFor,proto3" json:"alias_for,omitempty"`
	// The parameters accepted by the model
	Parameters map[string]*Model_Parameter `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Whether the models supports accepting images as input
	// Deprecated: Use `supported_input_formats` instead.
	//
	// Deprecated: Marked as deprecated in ai/model.proto.
	SupportsImageInput bool `protobuf:"varint,3,opt,name=supports_image_input,json=supportsImageInput,proto3" json:"supports_image_input,omitempty"`
	// The set of input formats supported by the model
	SupportedInputFormats []Model_InputFormats `protobuf:"varint,7,rep,packed,name=supported_input_formats,json=supportedInputFormats,proto3,enum=ai.Model_InputFormats" json:"supported_input_formats,omitempty"`
	// Tags that indicate features or attributes of a model
	Tags []Model_Tag `protobuf:"varint,8,rep,packed,name=tags,proto3,enum=ai.Model_Tag" json:"tags,omitempty"`
	// Indicates that the model is recommended for use by the Applied AI team.
	Recommended bool `protobuf:"varint,9,opt,name=recommended,proto3" json:"recommended,omitempty"`
	// Indicates that the model is deprecated and should not be used.
	LaunchStage Model_LaunchStage `protobuf:"varint,10,opt,name=launch_stage,json=launchStage,proto3,enum=ai.Model_LaunchStage" json:"launch_stage,omitempty"`
	// The suggested replacement model to use if this model's launch stage is `DEPRECATED`.
	Replacement string `protobuf:"bytes,11,opt,name=replacement,proto3" json:"replacement,omitempty"`
	// Indicates that the model supports tool calling
	Features []Model_Feature `protobuf:"varint,12,rep,packed,name=features,proto3,enum=ai.Model_Feature" json:"features,omitempty"`
	// Indicates that the model is hidden and does not appear in the list of available models.
	Hidden bool `protobuf:"varint,13,opt,name=hidden,proto3" json:"hidden,omitempty"`
	// Indicates that the model is disabled and should not be used.
	Disabled bool `protobuf:"varint,14,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *Model) Reset() {
	*x = Model{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Model) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Model) ProtoMessage() {}

func (x *Model) ProtoReflect() protoreflect.Message {
	mi := &file_ai_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Model.ProtoReflect.Descriptor instead.
func (*Model) Descriptor() ([]byte, []int) {
	return file_ai_model_proto_rawDescGZIP(), []int{0}
}

func (x *Model) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Model) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Model) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Model) GetAliasFor() string {
	if x != nil {
		return x.AliasFor
	}
	return ""
}

func (x *Model) GetParameters() map[string]*Model_Parameter {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// Deprecated: Marked as deprecated in ai/model.proto.
func (x *Model) GetSupportsImageInput() bool {
	if x != nil {
		return x.SupportsImageInput
	}
	return false
}

func (x *Model) GetSupportedInputFormats() []Model_InputFormats {
	if x != nil {
		return x.SupportedInputFormats
	}
	return nil
}

func (x *Model) GetTags() []Model_Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Model) GetRecommended() bool {
	if x != nil {
		return x.Recommended
	}
	return false
}

func (x *Model) GetLaunchStage() Model_LaunchStage {
	if x != nil {
		return x.LaunchStage
	}
	return Model_GA
}

func (x *Model) GetReplacement() string {
	if x != nil {
		return x.Replacement
	}
	return ""
}

func (x *Model) GetFeatures() []Model_Feature {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *Model) GetHidden() bool {
	if x != nil {
		return x.Hidden
	}
	return false
}

func (x *Model) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

// A parameter that the model accepts.
type Model_Parameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the parameter
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The default value of the parameter
	DefaultValue *Model_Parameter_Value `protobuf:"bytes,2,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	// The minimum value of the parameter
	MinValue *Model_Parameter_Value `protobuf:"bytes,3,opt,name=min_value,json=minValue,proto3" json:"min_value,omitempty"`
	// The maximum value of the parameter
	MaxValue *Model_Parameter_Value `protobuf:"bytes,4,opt,name=max_value,json=maxValue,proto3" json:"max_value,omitempty"`
}

func (x *Model_Parameter) Reset() {
	*x = Model_Parameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Model_Parameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Model_Parameter) ProtoMessage() {}

func (x *Model_Parameter) ProtoReflect() protoreflect.Message {
	mi := &file_ai_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Model_Parameter.ProtoReflect.Descriptor instead.
func (*Model_Parameter) Descriptor() ([]byte, []int) {
	return file_ai_model_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Model_Parameter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Model_Parameter) GetDefaultValue() *Model_Parameter_Value {
	if x != nil {
		return x.DefaultValue
	}
	return nil
}

func (x *Model_Parameter) GetMinValue() *Model_Parameter_Value {
	if x != nil {
		return x.MinValue
	}
	return nil
}

func (x *Model_Parameter) GetMaxValue() *Model_Parameter_Value {
	if x != nil {
		return x.MaxValue
	}
	return nil
}

type Model_Parameter_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*Model_Parameter_Value_StringValue
	//	*Model_Parameter_Value_IntValue
	//	*Model_Parameter_Value_DoubleValue
	//	*Model_Parameter_Value_BoolValue
	Value isModel_Parameter_Value_Value `protobuf_oneof:"value"`
}

func (x *Model_Parameter_Value) Reset() {
	*x = Model_Parameter_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ai_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Model_Parameter_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Model_Parameter_Value) ProtoMessage() {}

func (x *Model_Parameter_Value) ProtoReflect() protoreflect.Message {
	mi := &file_ai_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Model_Parameter_Value.ProtoReflect.Descriptor instead.
func (*Model_Parameter_Value) Descriptor() ([]byte, []int) {
	return file_ai_model_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (m *Model_Parameter_Value) GetValue() isModel_Parameter_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Model_Parameter_Value) GetStringValue() string {
	if x, ok := x.GetValue().(*Model_Parameter_Value_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *Model_Parameter_Value) GetIntValue() int32 {
	if x, ok := x.GetValue().(*Model_Parameter_Value_IntValue); ok {
		return x.IntValue
	}
	return 0
}

func (x *Model_Parameter_Value) GetDoubleValue() float64 {
	if x, ok := x.GetValue().(*Model_Parameter_Value_DoubleValue); ok {
		return x.DoubleValue
	}
	return 0
}

func (x *Model_Parameter_Value) GetBoolValue() bool {
	if x, ok := x.GetValue().(*Model_Parameter_Value_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

type isModel_Parameter_Value_Value interface {
	isModel_Parameter_Value_Value()
}

type Model_Parameter_Value_StringValue struct {
	StringValue string `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type Model_Parameter_Value_IntValue struct {
	IntValue int32 `protobuf:"varint,2,opt,name=int_value,json=intValue,proto3,oneof"`
}

type Model_Parameter_Value_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,3,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type Model_Parameter_Value_BoolValue struct {
	BoolValue bool `protobuf:"varint,4,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

func (*Model_Parameter_Value_StringValue) isModel_Parameter_Value_Value() {}

func (*Model_Parameter_Value_IntValue) isModel_Parameter_Value_Value() {}

func (*Model_Parameter_Value_DoubleValue) isModel_Parameter_Value_Value() {}

func (*Model_Parameter_Value_BoolValue) isModel_Parameter_Value_Value() {}

var File_ai_model_proto protoreflect.FileDescriptor

var file_ai_model_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x61, 0x69, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x61, 0x69, 0x22, 0x98, 0x0a, 0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x5f, 0x66, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x46, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x34, 0x0a, 0x14, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x42, 0x02, 0x18,
	0x01, 0x52, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x4e, 0x0a, 0x17, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x61, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x15,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x61, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54,
	0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x0c, 0x6c, 0x61,
	0x75, 0x6e, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x61, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4c, 0x61, 0x75, 0x6e,
	0x63, 0x68, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x61, 0x69, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x08, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x1a, 0xec, 0x02, 0x0a, 0x09, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x6d,
	0x69, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x61, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x9a, 0x01, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x69, 0x6e,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x64, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x00, 0x52, 0x0b, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f,
	0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x52, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61,
	0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2f, 0x0a, 0x0b,
	0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x47,
	0x41, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x45, 0x54, 0x41, 0x10, 0x01, 0x12, 0x0e, 0x0a,
	0x0a, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x22, 0x41, 0x0a,
	0x0c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x1c, 0x0a,
	0x18, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54,
	0x45, 0x58, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x02,
	0x22, 0x59, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x41, 0x47, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x49, 0x4e, 0x47,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4f, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x08,
	0x0a, 0x04, 0x46, 0x41, 0x53, 0x54, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x4e, 0x4c, 0x49,
	0x4e, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x04, 0x22, 0x42, 0x0a, 0x07, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x0d, 0x0a, 0x09, 0x54, 0x4f, 0x4f, 0x4c, 0x5f, 0x43, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x0f,
	0x0a, 0x0b, 0x4a, 0x53, 0x4f, 0x4e, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x41, 0x10, 0x02, 0x42,
	0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x65,
	0x61, 0x6b, 0x36, 0x2d, 0x73, 0x69, 0x74, 0x65, 0x73, 0x2f, 0x72, 0x32, 0x67, 0x32, 0x2d, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x69, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ai_model_proto_rawDescOnce sync.Once
	file_ai_model_proto_rawDescData = file_ai_model_proto_rawDesc
)

func file_ai_model_proto_rawDescGZIP() []byte {
	file_ai_model_proto_rawDescOnce.Do(func() {
		file_ai_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_ai_model_proto_rawDescData)
	})
	return file_ai_model_proto_rawDescData
}

var file_ai_model_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_ai_model_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ai_model_proto_goTypes = []interface{}{
	(Model_LaunchStage)(0),        // 0: ai.Model.LaunchStage
	(Model_InputFormats)(0),       // 1: ai.Model.InputFormats
	(Model_Tag)(0),                // 2: ai.Model.Tag
	(Model_Feature)(0),            // 3: ai.Model.Feature
	(*Model)(nil),                 // 4: ai.Model
	(*Model_Parameter)(nil),       // 5: ai.Model.Parameter
	nil,                           // 6: ai.Model.ParametersEntry
	(*Model_Parameter_Value)(nil), // 7: ai.Model.Parameter.Value
}
var file_ai_model_proto_depIdxs = []int32{
	6, // 0: ai.Model.parameters:type_name -> ai.Model.ParametersEntry
	1, // 1: ai.Model.supported_input_formats:type_name -> ai.Model.InputFormats
	2, // 2: ai.Model.tags:type_name -> ai.Model.Tag
	0, // 3: ai.Model.launch_stage:type_name -> ai.Model.LaunchStage
	3, // 4: ai.Model.features:type_name -> ai.Model.Feature
	7, // 5: ai.Model.Parameter.default_value:type_name -> ai.Model.Parameter.Value
	7, // 6: ai.Model.Parameter.min_value:type_name -> ai.Model.Parameter.Value
	7, // 7: ai.Model.Parameter.max_value:type_name -> ai.Model.Parameter.Value
	5, // 8: ai.Model.ParametersEntry.value:type_name -> ai.Model.Parameter
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_ai_model_proto_init() }
func file_ai_model_proto_init() {
	if File_ai_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ai_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Model); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Model_Parameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ai_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Model_Parameter_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ai_model_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Model_Parameter_Value_StringValue)(nil),
		(*Model_Parameter_Value_IntValue)(nil),
		(*Model_Parameter_Value_DoubleValue)(nil),
		(*Model_Parameter_Value_BoolValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ai_model_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ai_model_proto_goTypes,
		DependencyIndexes: file_ai_model_proto_depIdxs,
		EnumInfos:         file_ai_model_proto_enumTypes,
		MessageInfos:      file_ai_model_proto_msgTypes,
	}.Build()
	File_ai_model_proto = out.File
	file_ai_model_proto_rawDesc = nil
	file_ai_model_proto_goTypes = nil
	file_ai_model_proto_depIdxs = nil
}
