# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ai.assistants.v0 import assistant_pb2 as ai_dot_assistants_dot_v0_dot_assistant__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class AssistantsStub(object):
    """buf:lint:ignore SERVICE_SUFFIX
    buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
    buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListEngines = channel.unary_unary(
                '/ai.assistants.v0.Assistants/ListEngines',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.ListEnginesRequest.SerializeToString,
                response_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.ListEnginesResponse.FromString,
                )
        self.CreateAssistant = channel.unary_unary(
                '/ai.assistants.v0.Assistants/CreateAssistant',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.CreateAssistantRequest.SerializeToString,
                response_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Assistant.FromString,
                )
        self.GetAssistant = channel.unary_unary(
                '/ai.assistants.v0.Assistants/GetAssistant',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.GetAssistantRequest.SerializeToString,
                response_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Assistant.FromString,
                )
        self.ListAssistants = channel.unary_unary(
                '/ai.assistants.v0.Assistants/ListAssistants',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.ListAssistantsRequest.SerializeToString,
                response_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.ListAssistantsResponse.FromString,
                )
        self.UpdateAssistant = channel.unary_unary(
                '/ai.assistants.v0.Assistants/UpdateAssistant',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.UpdateAssistantRequest.SerializeToString,
                response_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Assistant.FromString,
                )
        self.DeleteAssistant = channel.unary_unary(
                '/ai.assistants.v0.Assistants/DeleteAssistant',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.DeleteAssistantRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.TestAssistantPermissions = channel.unary_unary(
                '/ai.assistants.v0.Assistants/TestAssistantPermissions',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.TestAssistantPermissionsRequest.SerializeToString,
                response_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.TestAssistantPermissionsResponse.FromString,
                )
        self.CreateThread = channel.unary_unary(
                '/ai.assistants.v0.Assistants/CreateThread',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.CreateThreadRequest.SerializeToString,
                response_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Thread.FromString,
                )
        self.GetThread = channel.unary_unary(
                '/ai.assistants.v0.Assistants/GetThread',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.GetThreadRequest.SerializeToString,
                response_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Thread.FromString,
                )
        self.ListThreads = channel.unary_unary(
                '/ai.assistants.v0.Assistants/ListThreads',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.ListThreadsRequest.SerializeToString,
                response_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.ListThreadsResponse.FromString,
                )
        self.UpdateThread = channel.unary_unary(
                '/ai.assistants.v0.Assistants/UpdateThread',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.UpdateThreadRequest.SerializeToString,
                response_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Thread.FromString,
                )
        self.DeleteThread = channel.unary_unary(
                '/ai.assistants.v0.Assistants/DeleteThread',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.DeleteThreadRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ShareThread = channel.unary_unary(
                '/ai.assistants.v0.Assistants/ShareThread',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.ShareThreadRequest.SerializeToString,
                response_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Thread.FromString,
                )
        self.CreateMessage = channel.unary_unary(
                '/ai.assistants.v0.Assistants/CreateMessage',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.CreateMessageRequest.SerializeToString,
                response_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Message.FromString,
                )
        self.GetMessage = channel.unary_unary(
                '/ai.assistants.v0.Assistants/GetMessage',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.GetMessageRequest.SerializeToString,
                response_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Message.FromString,
                )
        self.ListMessages = channel.unary_unary(
                '/ai.assistants.v0.Assistants/ListMessages',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.ListMessagesRequest.SerializeToString,
                response_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.ListMessagesResponse.FromString,
                )
        self.CreateThreadAndRun = channel.unary_unary(
                '/ai.assistants.v0.Assistants/CreateThreadAndRun',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.CreateThreadAndRunRequest.SerializeToString,
                response_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Run.FromString,
                )
        self.CreateRun = channel.unary_unary(
                '/ai.assistants.v0.Assistants/CreateRun',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.CreateRunRequest.SerializeToString,
                response_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Run.FromString,
                )
        self.GetRun = channel.unary_unary(
                '/ai.assistants.v0.Assistants/GetRun',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.GetRunRequest.SerializeToString,
                response_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Run.FromString,
                )
        self.ListRuns = channel.unary_unary(
                '/ai.assistants.v0.Assistants/ListRuns',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.ListRunsRequest.SerializeToString,
                response_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.ListRunsResponse.FromString,
                )
        self.DeleteRun = channel.unary_unary(
                '/ai.assistants.v0.Assistants/DeleteRun',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.DeleteRunRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.StreamRunResults = channel.unary_stream(
                '/ai.assistants.v0.Assistants/StreamRunResults',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.StreamRunResultsRequest.SerializeToString,
                response_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.StreamRunResultsResponse.FromString,
                )
        self.SubmitToolResponse = channel.unary_unary(
                '/ai.assistants.v0.Assistants/SubmitToolResponse',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.SubmitToolResponsesRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.CreateRunFeedback = channel.unary_unary(
                '/ai.assistants.v0.Assistants/CreateRunFeedback',
                request_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.CreateRunFeedbackRequest.SerializeToString,
                response_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.RunFeedback.FromString,
                )


class AssistantsServicer(object):
    """buf:lint:ignore SERVICE_SUFFIX
    buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
    buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
    """

    def ListEngines(self, request, context):
        """Retrieves a list of chat engines and their available models.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAssistant(self, request, context):
        """Creates an Assistant.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssistant(self, request, context):
        """Retrieves an Assistant by ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAssistants(self, request, context):
        """Lists Assistants.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAssistant(self, request, context):
        """Updates an Assistant.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAssistant(self, request, context):
        """Deletes an Assistant.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TestAssistantPermissions(self, request, context):
        """Returns permissions that a caller has on the specified Assistant.
        If the resource does not exist, this will return an empty set of
        permissions, not a `NOT_FOUND` error.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateThread(self, request, context):
        """Creates a Thread.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetThread(self, request, context):
        """Retrieves a Thread By ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListThreads(self, request, context):
        """Lists Threads.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateThread(self, request, context):
        """Update a Thread.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteThread(self, request, context):
        """Deletes a Thread.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShareThread(self, request, context):
        """Snapshots a thread and marks it as shared.
        Shared threads are immutable and can be viewed by all users that have been provided the ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateMessage(self, request, context):
        """Creates a Message in a Thread.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMessage(self, request, context):
        """Retrieves a Message by ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMessages(self, request, context):
        """Lists Messages in a Thread.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateThreadAndRun(self, request, context):
        """Creates a Thread and then creates a Run on that Thread.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRun(self, request, context):
        """Creates a Run on a Thread.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRun(self, request, context):
        """Retrieves a Run by ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRuns(self, request, context):
        """Lists Runs.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRun(self, request, context):
        """Deletes a Run.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamRunResults(self, request, context):
        """Streams the results generated by a Run.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitToolResponse(self, request, context):
        """Submits on or more responses to ToolCalls required by a Run.
        buf:lint:ignore RPC_REQUEST_STANDARD_NAME
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRunFeedback(self, request, context):
        """Creates a feedback entry for a Run.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AssistantsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListEngines': grpc.unary_unary_rpc_method_handler(
                    servicer.ListEngines,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.ListEnginesRequest.FromString,
                    response_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.ListEnginesResponse.SerializeToString,
            ),
            'CreateAssistant': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAssistant,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.CreateAssistantRequest.FromString,
                    response_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Assistant.SerializeToString,
            ),
            'GetAssistant': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssistant,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.GetAssistantRequest.FromString,
                    response_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Assistant.SerializeToString,
            ),
            'ListAssistants': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAssistants,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.ListAssistantsRequest.FromString,
                    response_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.ListAssistantsResponse.SerializeToString,
            ),
            'UpdateAssistant': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAssistant,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.UpdateAssistantRequest.FromString,
                    response_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Assistant.SerializeToString,
            ),
            'DeleteAssistant': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAssistant,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.DeleteAssistantRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'TestAssistantPermissions': grpc.unary_unary_rpc_method_handler(
                    servicer.TestAssistantPermissions,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.TestAssistantPermissionsRequest.FromString,
                    response_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.TestAssistantPermissionsResponse.SerializeToString,
            ),
            'CreateThread': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateThread,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.CreateThreadRequest.FromString,
                    response_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Thread.SerializeToString,
            ),
            'GetThread': grpc.unary_unary_rpc_method_handler(
                    servicer.GetThread,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.GetThreadRequest.FromString,
                    response_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Thread.SerializeToString,
            ),
            'ListThreads': grpc.unary_unary_rpc_method_handler(
                    servicer.ListThreads,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.ListThreadsRequest.FromString,
                    response_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.ListThreadsResponse.SerializeToString,
            ),
            'UpdateThread': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateThread,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.UpdateThreadRequest.FromString,
                    response_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Thread.SerializeToString,
            ),
            'DeleteThread': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteThread,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.DeleteThreadRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ShareThread': grpc.unary_unary_rpc_method_handler(
                    servicer.ShareThread,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.ShareThreadRequest.FromString,
                    response_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Thread.SerializeToString,
            ),
            'CreateMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMessage,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.CreateMessageRequest.FromString,
                    response_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Message.SerializeToString,
            ),
            'GetMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessage,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.GetMessageRequest.FromString,
                    response_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Message.SerializeToString,
            ),
            'ListMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.ListMessages,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.ListMessagesRequest.FromString,
                    response_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.ListMessagesResponse.SerializeToString,
            ),
            'CreateThreadAndRun': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateThreadAndRun,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.CreateThreadAndRunRequest.FromString,
                    response_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Run.SerializeToString,
            ),
            'CreateRun': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRun,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.CreateRunRequest.FromString,
                    response_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Run.SerializeToString,
            ),
            'GetRun': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRun,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.GetRunRequest.FromString,
                    response_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.Run.SerializeToString,
            ),
            'ListRuns': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRuns,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.ListRunsRequest.FromString,
                    response_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.ListRunsResponse.SerializeToString,
            ),
            'DeleteRun': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRun,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.DeleteRunRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'StreamRunResults': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamRunResults,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.StreamRunResultsRequest.FromString,
                    response_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.StreamRunResultsResponse.SerializeToString,
            ),
            'SubmitToolResponse': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitToolResponse,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.SubmitToolResponsesRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'CreateRunFeedback': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRunFeedback,
                    request_deserializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.CreateRunFeedbackRequest.FromString,
                    response_serializer=ai_dot_assistants_dot_v0_dot_assistant__pb2.RunFeedback.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ai.assistants.v0.Assistants', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Assistants(object):
    """buf:lint:ignore SERVICE_SUFFIX
    buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
    buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
    """

    @staticmethod
    def ListEngines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.assistants.v0.Assistants/ListEngines',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.ListEnginesRequest.SerializeToString,
            ai_dot_assistants_dot_v0_dot_assistant__pb2.ListEnginesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateAssistant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.assistants.v0.Assistants/CreateAssistant',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.CreateAssistantRequest.SerializeToString,
            ai_dot_assistants_dot_v0_dot_assistant__pb2.Assistant.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAssistant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.assistants.v0.Assistants/GetAssistant',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.GetAssistantRequest.SerializeToString,
            ai_dot_assistants_dot_v0_dot_assistant__pb2.Assistant.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAssistants(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.assistants.v0.Assistants/ListAssistants',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.ListAssistantsRequest.SerializeToString,
            ai_dot_assistants_dot_v0_dot_assistant__pb2.ListAssistantsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAssistant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.assistants.v0.Assistants/UpdateAssistant',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.UpdateAssistantRequest.SerializeToString,
            ai_dot_assistants_dot_v0_dot_assistant__pb2.Assistant.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAssistant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.assistants.v0.Assistants/DeleteAssistant',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.DeleteAssistantRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TestAssistantPermissions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.assistants.v0.Assistants/TestAssistantPermissions',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.TestAssistantPermissionsRequest.SerializeToString,
            ai_dot_assistants_dot_v0_dot_assistant__pb2.TestAssistantPermissionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateThread(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.assistants.v0.Assistants/CreateThread',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.CreateThreadRequest.SerializeToString,
            ai_dot_assistants_dot_v0_dot_assistant__pb2.Thread.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetThread(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.assistants.v0.Assistants/GetThread',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.GetThreadRequest.SerializeToString,
            ai_dot_assistants_dot_v0_dot_assistant__pb2.Thread.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListThreads(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.assistants.v0.Assistants/ListThreads',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.ListThreadsRequest.SerializeToString,
            ai_dot_assistants_dot_v0_dot_assistant__pb2.ListThreadsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateThread(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.assistants.v0.Assistants/UpdateThread',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.UpdateThreadRequest.SerializeToString,
            ai_dot_assistants_dot_v0_dot_assistant__pb2.Thread.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteThread(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.assistants.v0.Assistants/DeleteThread',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.DeleteThreadRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShareThread(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.assistants.v0.Assistants/ShareThread',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.ShareThreadRequest.SerializeToString,
            ai_dot_assistants_dot_v0_dot_assistant__pb2.Thread.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.assistants.v0.Assistants/CreateMessage',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.CreateMessageRequest.SerializeToString,
            ai_dot_assistants_dot_v0_dot_assistant__pb2.Message.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.assistants.v0.Assistants/GetMessage',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.GetMessageRequest.SerializeToString,
            ai_dot_assistants_dot_v0_dot_assistant__pb2.Message.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.assistants.v0.Assistants/ListMessages',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.ListMessagesRequest.SerializeToString,
            ai_dot_assistants_dot_v0_dot_assistant__pb2.ListMessagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateThreadAndRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.assistants.v0.Assistants/CreateThreadAndRun',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.CreateThreadAndRunRequest.SerializeToString,
            ai_dot_assistants_dot_v0_dot_assistant__pb2.Run.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.assistants.v0.Assistants/CreateRun',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.CreateRunRequest.SerializeToString,
            ai_dot_assistants_dot_v0_dot_assistant__pb2.Run.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.assistants.v0.Assistants/GetRun',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.GetRunRequest.SerializeToString,
            ai_dot_assistants_dot_v0_dot_assistant__pb2.Run.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListRuns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.assistants.v0.Assistants/ListRuns',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.ListRunsRequest.SerializeToString,
            ai_dot_assistants_dot_v0_dot_assistant__pb2.ListRunsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.assistants.v0.Assistants/DeleteRun',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.DeleteRunRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamRunResults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ai.assistants.v0.Assistants/StreamRunResults',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.StreamRunResultsRequest.SerializeToString,
            ai_dot_assistants_dot_v0_dot_assistant__pb2.StreamRunResultsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitToolResponse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.assistants.v0.Assistants/SubmitToolResponse',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.SubmitToolResponsesRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateRunFeedback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.assistants.v0.Assistants/CreateRunFeedback',
            ai_dot_assistants_dot_v0_dot_assistant__pb2.CreateRunFeedbackRequest.SerializeToString,
            ai_dot_assistants_dot_v0_dot_assistant__pb2.RunFeedback.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
