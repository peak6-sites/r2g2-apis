# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ai.embedding.v0 import embedding_pb2 as ai_dot_embedding_dot_v0_dot_embedding__pb2


class EmbeddingsStub(object):
    """Embedding service provides methods for generating text embeddings,
    calculating similarity between texts, and listing available models.
    buf:lint:ignore SERVICE_SUFFIX
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateEmbedding = channel.unary_unary(
                '/ai.embedding.v0.Embeddings/CreateEmbedding',
                request_serializer=ai_dot_embedding_dot_v0_dot_embedding__pb2.CreateEmbeddingRequest.SerializeToString,
                response_deserializer=ai_dot_embedding_dot_v0_dot_embedding__pb2.CreateEmbeddingResponse.FromString,
                )
        self.ComputeSimilarity = channel.unary_unary(
                '/ai.embedding.v0.Embeddings/ComputeSimilarity',
                request_serializer=ai_dot_embedding_dot_v0_dot_embedding__pb2.ComputeSimilarityRequest.SerializeToString,
                response_deserializer=ai_dot_embedding_dot_v0_dot_embedding__pb2.ComputeSimilarityResponse.FromString,
                )
        self.ListModels = channel.unary_unary(
                '/ai.embedding.v0.Embeddings/ListModels',
                request_serializer=ai_dot_embedding_dot_v0_dot_embedding__pb2.ListModelsRequest.SerializeToString,
                response_deserializer=ai_dot_embedding_dot_v0_dot_embedding__pb2.ListModelsResponse.FromString,
                )


class EmbeddingsServicer(object):
    """Embedding service provides methods for generating text embeddings,
    calculating similarity between texts, and listing available models.
    buf:lint:ignore SERVICE_SUFFIX
    """

    def CreateEmbedding(self, request, context):
        """Generates an embedding vector for the provided text using the specified model.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ComputeSimilarity(self, request, context):
        """Calculates the similarity score between two texts using the specified model.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListModels(self, request, context):
        """Retrieves a list of available embedding models.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EmbeddingsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateEmbedding': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateEmbedding,
                    request_deserializer=ai_dot_embedding_dot_v0_dot_embedding__pb2.CreateEmbeddingRequest.FromString,
                    response_serializer=ai_dot_embedding_dot_v0_dot_embedding__pb2.CreateEmbeddingResponse.SerializeToString,
            ),
            'ComputeSimilarity': grpc.unary_unary_rpc_method_handler(
                    servicer.ComputeSimilarity,
                    request_deserializer=ai_dot_embedding_dot_v0_dot_embedding__pb2.ComputeSimilarityRequest.FromString,
                    response_serializer=ai_dot_embedding_dot_v0_dot_embedding__pb2.ComputeSimilarityResponse.SerializeToString,
            ),
            'ListModels': grpc.unary_unary_rpc_method_handler(
                    servicer.ListModels,
                    request_deserializer=ai_dot_embedding_dot_v0_dot_embedding__pb2.ListModelsRequest.FromString,
                    response_serializer=ai_dot_embedding_dot_v0_dot_embedding__pb2.ListModelsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ai.embedding.v0.Embeddings', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Embeddings(object):
    """Embedding service provides methods for generating text embeddings,
    calculating similarity between texts, and listing available models.
    buf:lint:ignore SERVICE_SUFFIX
    """

    @staticmethod
    def CreateEmbedding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.embedding.v0.Embeddings/CreateEmbedding',
            ai_dot_embedding_dot_v0_dot_embedding__pb2.CreateEmbeddingRequest.SerializeToString,
            ai_dot_embedding_dot_v0_dot_embedding__pb2.CreateEmbeddingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ComputeSimilarity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.embedding.v0.Embeddings/ComputeSimilarity',
            ai_dot_embedding_dot_v0_dot_embedding__pb2.ComputeSimilarityRequest.SerializeToString,
            ai_dot_embedding_dot_v0_dot_embedding__pb2.ComputeSimilarityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListModels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.embedding.v0.Embeddings/ListModels',
            ai_dot_embedding_dot_v0_dot_embedding__pb2.ListModelsRequest.SerializeToString,
            ai_dot_embedding_dot_v0_dot_embedding__pb2.ListModelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
