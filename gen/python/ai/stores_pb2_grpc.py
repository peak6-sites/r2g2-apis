# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ai import stores_pb2 as ai_dot_stores__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class StoresStub(object):
    """Stores is a service for managing file stores
    buf:lint:ignore SERVICE_SUFFIX
    buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
    buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateStore = channel.unary_unary(
                '/ai.Stores/CreateStore',
                request_serializer=ai_dot_stores__pb2.CreateStoreRequest.SerializeToString,
                response_deserializer=ai_dot_stores__pb2.Store.FromString,
                )
        self.GetStore = channel.unary_unary(
                '/ai.Stores/GetStore',
                request_serializer=ai_dot_stores__pb2.GetStoreRequest.SerializeToString,
                response_deserializer=ai_dot_stores__pb2.Store.FromString,
                )
        self.ListStores = channel.unary_unary(
                '/ai.Stores/ListStores',
                request_serializer=ai_dot_stores__pb2.ListStoresRequest.SerializeToString,
                response_deserializer=ai_dot_stores__pb2.ListStoresResponse.FromString,
                )
        self.UpdateStore = channel.unary_unary(
                '/ai.Stores/UpdateStore',
                request_serializer=ai_dot_stores__pb2.UpdateStoreRequest.SerializeToString,
                response_deserializer=ai_dot_stores__pb2.Store.FromString,
                )
        self.DeleteStore = channel.unary_unary(
                '/ai.Stores/DeleteStore',
                request_serializer=ai_dot_stores__pb2.DeleteStoreRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetStoreConfig = channel.unary_unary(
                '/ai.Stores/GetStoreConfig',
                request_serializer=ai_dot_stores__pb2.GetStoreConfigRequest.SerializeToString,
                response_deserializer=ai_dot_stores__pb2.StoreConfig.FromString,
                )
        self.UploadFile = channel.unary_stream(
                '/ai.Stores/UploadFile',
                request_serializer=ai_dot_stores__pb2.UploadFileRequest.SerializeToString,
                response_deserializer=ai_dot_stores__pb2.UploadFileEvent.FromString,
                )
        self.UploadFileUnary = channel.unary_unary(
                '/ai.Stores/UploadFileUnary',
                request_serializer=ai_dot_stores__pb2.UploadFileRequest.SerializeToString,
                response_deserializer=ai_dot_stores__pb2.UploadFileUnaryResponse.FromString,
                )
        self.GetFile = channel.unary_unary(
                '/ai.Stores/GetFile',
                request_serializer=ai_dot_stores__pb2.GetFileRequest.SerializeToString,
                response_deserializer=ai_dot_stores__pb2.File.FromString,
                )
        self.ListFiles = channel.unary_unary(
                '/ai.Stores/ListFiles',
                request_serializer=ai_dot_stores__pb2.ListFilesRequest.SerializeToString,
                response_deserializer=ai_dot_stores__pb2.ListFilesResponse.FromString,
                )
        self.DeleteFile = channel.unary_unary(
                '/ai.Stores/DeleteFile',
                request_serializer=ai_dot_stores__pb2.DeleteFileRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.TestStorePermissions = channel.unary_unary(
                '/ai.Stores/TestStorePermissions',
                request_serializer=ai_dot_stores__pb2.TestStorePermissionsRequest.SerializeToString,
                response_deserializer=ai_dot_stores__pb2.TestStorePermissionsResponse.FromString,
                )


class StoresServicer(object):
    """Stores is a service for managing file stores
    buf:lint:ignore SERVICE_SUFFIX
    buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
    buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
    """

    def CreateStore(self, request, context):
        """Creates a new store for users to upload files to
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStore(self, request, context):
        """Gets the current state of a store
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListStores(self, request, context):
        """Lists the available stores
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateStore(self, request, context):
        """Updates the state of a store
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteStore(self, request, context):
        """Deletes a store and all of its files
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStoreConfig(self, request, context):
        """Gets the configuration of a store
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadFile(self, request, context):
        """Initiates the process of uploading a file to a store
        The server will respond with an event indicating where the file should be uploaded
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadFileUnary(self, request, context):
        """Initiates the process of uploading a file to a store
        buf:lint:ignore RPC_REQUEST_STANDARD_NAME
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFile(self, request, context):
        """Gets the current state of a file in a store
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFiles(self, request, context):
        """Lists the files in a store
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFile(self, request, context):
        """Deletes a file from a store
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TestStorePermissions(self, request, context):
        """Returns permissions that a call has on the specified Store.
        If the resource does not exist, the response will return an empty set of
        permissions, not a `NOT_FOUND` error.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StoresServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateStore': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateStore,
                    request_deserializer=ai_dot_stores__pb2.CreateStoreRequest.FromString,
                    response_serializer=ai_dot_stores__pb2.Store.SerializeToString,
            ),
            'GetStore': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStore,
                    request_deserializer=ai_dot_stores__pb2.GetStoreRequest.FromString,
                    response_serializer=ai_dot_stores__pb2.Store.SerializeToString,
            ),
            'ListStores': grpc.unary_unary_rpc_method_handler(
                    servicer.ListStores,
                    request_deserializer=ai_dot_stores__pb2.ListStoresRequest.FromString,
                    response_serializer=ai_dot_stores__pb2.ListStoresResponse.SerializeToString,
            ),
            'UpdateStore': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateStore,
                    request_deserializer=ai_dot_stores__pb2.UpdateStoreRequest.FromString,
                    response_serializer=ai_dot_stores__pb2.Store.SerializeToString,
            ),
            'DeleteStore': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteStore,
                    request_deserializer=ai_dot_stores__pb2.DeleteStoreRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetStoreConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStoreConfig,
                    request_deserializer=ai_dot_stores__pb2.GetStoreConfigRequest.FromString,
                    response_serializer=ai_dot_stores__pb2.StoreConfig.SerializeToString,
            ),
            'UploadFile': grpc.unary_stream_rpc_method_handler(
                    servicer.UploadFile,
                    request_deserializer=ai_dot_stores__pb2.UploadFileRequest.FromString,
                    response_serializer=ai_dot_stores__pb2.UploadFileEvent.SerializeToString,
            ),
            'UploadFileUnary': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadFileUnary,
                    request_deserializer=ai_dot_stores__pb2.UploadFileRequest.FromString,
                    response_serializer=ai_dot_stores__pb2.UploadFileUnaryResponse.SerializeToString,
            ),
            'GetFile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFile,
                    request_deserializer=ai_dot_stores__pb2.GetFileRequest.FromString,
                    response_serializer=ai_dot_stores__pb2.File.SerializeToString,
            ),
            'ListFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFiles,
                    request_deserializer=ai_dot_stores__pb2.ListFilesRequest.FromString,
                    response_serializer=ai_dot_stores__pb2.ListFilesResponse.SerializeToString,
            ),
            'DeleteFile': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFile,
                    request_deserializer=ai_dot_stores__pb2.DeleteFileRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'TestStorePermissions': grpc.unary_unary_rpc_method_handler(
                    servicer.TestStorePermissions,
                    request_deserializer=ai_dot_stores__pb2.TestStorePermissionsRequest.FromString,
                    response_serializer=ai_dot_stores__pb2.TestStorePermissionsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ai.Stores', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Stores(object):
    """Stores is a service for managing file stores
    buf:lint:ignore SERVICE_SUFFIX
    buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
    buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
    """

    @staticmethod
    def CreateStore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.Stores/CreateStore',
            ai_dot_stores__pb2.CreateStoreRequest.SerializeToString,
            ai_dot_stores__pb2.Store.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.Stores/GetStore',
            ai_dot_stores__pb2.GetStoreRequest.SerializeToString,
            ai_dot_stores__pb2.Store.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListStores(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.Stores/ListStores',
            ai_dot_stores__pb2.ListStoresRequest.SerializeToString,
            ai_dot_stores__pb2.ListStoresResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateStore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.Stores/UpdateStore',
            ai_dot_stores__pb2.UpdateStoreRequest.SerializeToString,
            ai_dot_stores__pb2.Store.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteStore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.Stores/DeleteStore',
            ai_dot_stores__pb2.DeleteStoreRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStoreConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.Stores/GetStoreConfig',
            ai_dot_stores__pb2.GetStoreConfigRequest.SerializeToString,
            ai_dot_stores__pb2.StoreConfig.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ai.Stores/UploadFile',
            ai_dot_stores__pb2.UploadFileRequest.SerializeToString,
            ai_dot_stores__pb2.UploadFileEvent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadFileUnary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.Stores/UploadFileUnary',
            ai_dot_stores__pb2.UploadFileRequest.SerializeToString,
            ai_dot_stores__pb2.UploadFileUnaryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.Stores/GetFile',
            ai_dot_stores__pb2.GetFileRequest.SerializeToString,
            ai_dot_stores__pb2.File.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.Stores/ListFiles',
            ai_dot_stores__pb2.ListFilesRequest.SerializeToString,
            ai_dot_stores__pb2.ListFilesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.Stores/DeleteFile',
            ai_dot_stores__pb2.DeleteFileRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TestStorePermissions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.Stores/TestStorePermissions',
            ai_dot_stores__pb2.TestStorePermissionsRequest.SerializeToString,
            ai_dot_stores__pb2.TestStorePermissionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
